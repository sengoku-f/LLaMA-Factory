[
  {
    "text": "## 条件语句\n条件语句又被称为选择语句或分支语句，其特点是根据条件选择执行不同的语句。\n### 示例：输入一个数字，通过if条件语句判断其是否在0到10之间，并输出结果提示。\n1. 创建一个名为“条件语句”的组件；\n   - 增加分组\n     在【组件管理】界面，单击“增加”-“增加分组”进行组件分组的创建（若有分组存在，则可忽略该步骤）。\n     ![image-20230607095519870](IF.assets/image-20230607095519870.png)\n   - 增加组件\n     选中某个分组，鼠标右击选择“增加组件”，或通过单击“增加”-“增加组件”的方式进行组件的增加。\n     ![image-20230607095115729](IF.assets/image-20230607095115729.png)\n     ![image-20230607095425880](IF.assets/image-20230607095425880.png)\n2. 添加【活动范围】函数到组件编辑面板。\n   > **[info] 说明**\n   >\n   > &emsp; 【活动范围】函数可对活动范围内的组件，进行整体注释、复制等操作，方便编辑操作，也可以不使用此函数 。\n   在搜索栏中输入“活动范围”进行搜索，然后在组件编辑面板选择需要插入函数位置后双击【活动范围】，即可将【活动范围】函数添加到组件编辑面板中。\n   ![image-20230607100919321](IF.assets/image-20230607100919321.png)\n   > **[info] 操作提示**\n   >\n   > &emsp; 在组件编辑面板，单击【活动范围】函数，可修改其显示名称，便于用户查阅脚本，如下图所示，将显示名称修改为“IF条件语句的操作”。\n   ![image-20230607101157473](IF.assets/image-20230607101157473.png)\n   显示名称修改完成后，效果如下：\n   ![image-20230607101221661](IF.assets/image-20230607101221661.png)\n3. 在【活动范围】函数下，添加【输入对话框】函数，添加的方式同上述步骤1。\n   > **[info] 说明**\n   >\n   > &emsp; 【输入对话框】函数在脚本执行过程中可弹出一个对话框与用户进行交互。示例中使用此函数是为了弹出一个对话框，以供用户输入一个数字进行大小判断。\n   ![image-20230607101402874](IF.assets/image-20230607101402874.png)\n   （1）设置“标题”属性：将【输入对话框】函数的标题属性设置为：“请输入一个0到10的数字”。\n   ![image-20230607101757511](IF.assets/image-20230607101757511.png)\n   （2）设置“结果”属性：创建【输入对话框】函数的输出变量，并将输出的结果赋给变量“digit”。\n   > **[info] 操作提示**\n   >\n   > &emsp; 鼠标右击“结果”后方的编辑框，然后在弹出的提示框中选择“创建变量”。\n   ![image-20230607102029506](IF.assets/image-20230607102029506.png)\n   > **[info] 操作提示**\n   >\n   > &emsp; 在创建变量窗口中，填入所要创建的变量名称。\n   ![image-20230607102223073](IF.assets/image-20230607102223073.png)\n   （3）完成【输入对话框】函数的属性设置，如下图所示：\n   ![image-20230607102343832](IF.assets/image-20230607102343832.png)\n4. 添加【赋值】函数，并将【输入对话框】函数中创建的 “digit” 变量转换为 int 类型。\n   > **[info] 说明**\n   >\n   > &emsp;【输入对话框】函数输出的 “digit” 变量属性为 string 类型，无法进行大小比较，因此需要将其转换为 int 类型才能进行比较。【赋值】函数可以将转换后的结果赋值到新的变量里，以便后续使用新变量进行大小比较。\n   （1）添加【赋值】函数。\n   ![image-20230607102531876](IF.assets/image-20230607102531876.png)\n   （2） 在【赋值】函数的“值”属性中，输入 “StrToInt(digit)” 进行类型转化。\n   ![image-20230607102811845](IF.assets/image-20230607102811845.png)\n   （3）创建一个变量 a，将转化后的结果赋给 a，具体操作如下：\n   ![image-20230607102952725](IF.assets/image-20230607102952725.png)\n   ![image-20230607103105338](IF.assets/image-20230607103105338.png)\n   > **[info] 操作提示**\n   >\n   > &emsp;变量类型，需要按 F2 切换为编辑状态，在可选择类型下拉框中，选择“Integer”。\n   ![image-20230607103218504](IF.assets/image-20230607103218504.png)\n   > **[info] 操作提示**\n   >\n   > &emsp;在【赋值】函数的“目标”属性栏，鼠标右击，在提示框中选择“显示智能提示”，然后选择已创建的变量 “a”。\n   ![image-20230607103316066](IF.assets/image-20230607103316066.png)\n   ![image-20230607103357513](IF.assets/image-20230607103357513.png)\n   （4）【赋值】函数设置完成后，效果如下图所示：\n   ![image-20230607103427833](IF.assets/image-20230607103427833.png)\n5. 添加【IF条件】函数，并将【IF条件】函数的条件设置为：“(a > 0) and (a < 10)”。\n   ![image-20230607103557725](IF.assets/image-20230607103557725.png)\n   ![image-20230607103651944](IF.assets/image-20230607103651944.png)\n6. 在【IF条件】函数下方，添加【消息框】函数，并将【消息框】函数的“标题”属性设置为：'True' ，“文本”属性设置为：\t\n   ```\n   '输入的数字为：'+ digit +': 符合条件'\n   ```\n   > **[info] 函数说明**\n   >\n   > &emsp;此处【消息框】函数用于提示符合条件的结果。\n   ![image-20230607103800304](IF.assets/image-20230607103800304.png)\n   ![image-20230607103949005](IF.assets/image-20230607103949005.png)\n7. 在【IF条件】函数“否则”的后方，添加【消息框】函数，并将【消息框】函数的“标题”属性设置为：'True' ，“文本”属性设置为：\t\n   ```\n   '输入的数字为：'+ digit +': 不符合条件'\n   ```\n   >  **[info] 函数说明**\n   >\n   > &emsp;此处【消息框】函数用于提示不符合条件的结果。\n   ![image-20230607104604464](IF.assets/image-20230607104604464.png)\n8. 组件编辑完成后，单击“保存”，单击“运行”-“运行”执行该组件。\n   ![image-20230607104657604](IF.assets/image-20230607104657604.png)\n9. 执行的结果如下：\n   - 符合条件的结果\n     ![image-20230607104728810](IF.assets/image-20230607104728810.png)\n     ![image-20230607104747582](IF.assets/image-20230607104747582.png)\n   - 不符合条件的结果\n     ![image-20230607104837615](IF.assets/image-20230607104837615.png)\n     ![image-20230607104854668](IF.assets/image-20230607104854668.png)"
  },
  {
    "text": "## 数据类型\n数据类型是所有计算机语言都必须涉及的内容，它用于确定变量在内存中的存放方式和占用内存的大小。常用的基本数据类型如下：\n| 数据类型 | 含义                                                         | 示例              | 说明                                    |\n| -------- | ------------------------------------------------------------ | ----------------- | --------------------------------------- |\n| String   | 字符串类型，可以定义一个字符串序列                       | ‘computer’,’text’ | 字符前后要添加单引号                    |\n| Boolean  | 布尔值，只有2个值                                            | True/False        | 一般用于做判断或决策                    |\n| Integer  | 整型,，用于存储程序中的整数类型数值                     | 100，2020         | 一般用于执行方程或者进行比较       |\n| Double   | 双精度浮点类型，用于存储程序中的小数类型数值，表示范围：-1.79E+308~-1.79E+308 | 10.5,13.56        | 一般通过变量来实现输入和输出       |\n| Float    | 单精度浮点类型，可以定义一个浮点数，表示范围：-3.40E+38~3.40E+38 | 1.0,3.14          | 一般通过变量来实现输入和输出       |\n| Array    | 数组类型，用于存储同一类型的多个值，可以创建整数类型数组、字符串类型数组、布尔值类型数组等具有固定的大小 | [‘0.1’,’0.2’…]    | 一般通过变量来实现输入和输出       |\n| List     | 列表类型，也是一种Object类型，用于存储同一类型的多个值，可以被延长或缩短 | [‘1’,’2’,’3’…]    | 一般通过变量来实现列表的输入和输出 |\n- 系统支持的变量类型，可通过“变量”-“变量类型”进行查看，同时在变量页签可以对变量进行增删改操作。\n  ![image-20230601151543319](Data.assets/image-20230601151543319.png)\n- 系统支持的参数类型，可通过“参数”-“参数类型”进行查看，同时在参数页签可以对参数进行增删改操作。\n  ![image-20230601151501496](Data.assets/image-20230601151501496.png)\n### 部分需注意的数据类型说明\n- 字符串\n  字符串类型的内容，需要用单引号括起来，否则会报错。\n  可在表达式编辑器中，单击下方的 “+” 号或者 “-” 号，对字符串整体添加或去除单引号。\n  ![image-20230601152021455](Data.assets/image-20230601152021455.png)\n  ![image-20230601152105818](Data.assets/image-20230601152105818.png)\n- 列表\n  列表是最常用的类型之一，列表输出可通过如下方式进行。\n  1. 全部列表项，可通过“遍历循环”进行输出。\n  2. 指定列表项，可通过“获取字符串列表项”对指定顺序的字符进行输出。\n  > **[warning] 注意**\n  > \n  >  &emsp;其余数据类型中，TList 均表示列表。如![1695200833379](Data.assets/1695200833379.png)数据类型，即表示是一个列表，列表项类型为 TUiElement 。"
  },
  {
    "text": "## 循环语句\n 循环语句在不少实际问题中有许多具有规律性的重复操作，因此在程序中就需要重复执行某些语句。一组被重复执行的语句称之为循环体，能否继续重复，决定循环的终止条件。循环结构是在一定条件下反复执行某段程序的流程结构，被反复执行的程序被称为循环体。循环语句是由循环体及循环的终止条件两部分组成的。 下面为您介绍6种循环语法。\n### 条件循环\n当条件循环开始后，先判断条件是否满足，如果满足就执行循环体内的语句，执行完毕后再回来判断条件是否满足，如此无限重复，直到条件不满足时，执行先条件后面的语句。\n#### 示例：输入一个0到10的数字，判断其是否大于0，若 i 大于0，则 i 进行自减操作，直到不满足条件（即 i = 0），跳出循环。\n1. 添加“活动范围”函数，显示名称设置如下：\n   ![image-20230607155303148](For.assets/image-20230607155303148.png)\n2. 添加“输入对话框”函数，属性设置如下所示：\n   ![image-20230607163141837](For.assets/image-20230607163141837.png)\n3. 添加“赋值”函数，属性设置结果如下所示：\n   ![image-20230607163203519](For.assets/image-20230607163203519.png)\n4. 添加“条件循环”函数，显示名称和属性值设置结果如下：\n   ![image-20230607163231044](For.assets/image-20230607163231044.png)\n5. 在“条件循环”下，依次添加两个“赋值”函数，如下图所示：\n   ![image-20230607163251066](For.assets/image-20230607163251066.png)\n   创建一个变量 A ，将自减后 i 的值转换为字符串类型，并将转换后的结果赋予变量 A 。变量 A 的创建方法，同条件循环中[变量a](\\语法基础\\IF.html#变量a)的创建方法一样。\n   ![image-20230607163312012](For.assets/image-20230607163312012.png)\n6. 添加“日志消息”函数，函数设置结果如下：\n   ![image-20230607163326920](For.assets/image-20230607163326920.png)\n7. 添加“消息框”函数，函数设置效果如下：\n   ![image-20230607163340998](For.assets/image-20230607163340998.png)\n8. 待组件编辑完成后，单击【保存】，执行该组件。\n9. 执行的结果如下所示：\n   ![image-20230607163614557](For.assets/image-20230607163614557.png)\n   ![image-20230607163636916](For.assets/image-20230607163636916.png)\n   ![image-20230607163648727](For.assets/image-20230607163648727.png)\n   ![image-20230607163704019](For.assets/image-20230607163704019.png)\n### 遍历循环\n使用遍历循环可以迭代数组或者一个集合对象，用于循环访问集合以获取所需信息，为数组或对象集合中的每一个元素重复一个嵌入语句组。\n#### 示例：遍历输出一个字符串列表里面的内容。\n1. 添加“活动范围”函数，显示名称设置如下：\n   ![image-20230607115622308](For.assets/image-20230607115622308.png)\n2. 添加“构建字符串列表”函数，属性设置如下：\n   ![image-20230607115709775](For.assets/image-20230607115709775.png)\n3. 添加“遍历循环”函数，属性设置效果如下：\n   ![image-20230607115755444](For.assets/image-20230607115755444.png)\n4. 在“遍历循环”函数下，依次添加“日志消息”函数，如下所示：\n   ![image-20230607115840276](For.assets/image-20230607115840276.png)\n   ![image-20230607115854453](For.assets/image-20230607115854453.png)\n### FOR循环\n使用 “FOR 循环” 可指定本次循环的次数，当执行到设定的最大范围后，退出本次循环。\n#### 示例：循环输出数字1到10。\n1. 添加“活动范围”函数，函数设置效果如下：\n   ![image-20230607121715760](For.assets/image-20230607121715760.png)\n2. 添加 “for 循环”函数，函数设置效果如下：\n   ![image-20230607121746198](For.assets/image-20230607121746198.png)\n3. 添加“赋值”函数，函数设置效果如下：\n   ![image-20230607121810244](For.assets/image-20230607121810244.png)\n4. 添加“日志消息”函数，函数设置效果如下：\n   ![image-20230607121838215](For.assets/image-20230607121838215.png)\n5. 待组件编辑完成后，单击【保存】，执行组件。\n   ![image-20230607122016995](For.assets/image-20230607122016995.png)\n6. 执行结果如下所示：\n   ![image-20230607122044881](For.assets/image-20230607122044881.png)\n### Continue\nContinue 是用于跳过本次循环，继续进行下一次循环，即本次循环中 Continue 后面的代码不执行,直接进行下一次循环。\n#### 示例：基于上述遍历循环例子，跳过列表中值为“AA” 的记录。\n1. 在“遍历循环”函数下方添加 “IF 条件”函数，“IF 条件” 函数的条件设置如图所示：\n   ![image-20230607122344114](For.assets/image-20230607122344114.png)\n2. 在 “IF 条件”函数下方添加“继续”函数。\n3. 待组件编辑完成后，单击【保存】执行组件。\n4. 执行结果如图所示：\n   ![image-20230607122435685](For.assets/image-20230607122435685.png)\n### Break\n Break 用于跳出循环，即不执行本循环体内的其他语句，直接跳出循环。\n#### 示例：基于上述遍历循环例子，找到列表中值为 “BB” 的记录，则跳出循环。\n1. 将 “IF 条件”函数的条件设置如下所示：\n   ![image-20230607122609845](For.assets/image-20230607122609845.png)\n2. 在 “IF 条件”函数下方添加“中断”函数。\n   ![image-20230607122644030](For.assets/image-20230607122644030.png)\n3. 编辑完组件后，单击“保存”，执行组件。\n4. 组件执行的结果如下所示：\n   ![image-20230607122715210](For.assets/image-20230607122715210.png)\n### repeat循环\n重复执行循环，直到指定的条件为真时结束循环。\n【repeat 循环】与【条件循环】的区别：【条件循环】先判断，后执行，而【repeat 循环】先执行后判断。\n#### **示例一**（单层循环）：创建一个变量 x，且赋值为1，对 x 进行自加，直到 “x>3” 时结束循环。\n1. 在组件编辑面板中，添加【repeat 循环】函数，设置终止循环条件 “x>3” 。\n   ![image-20230630094632442](For.assets/image-20230630094632442.png)\n2. 在【repeat 循环】下方添加【自加】函数，在该函数中创建变量 x ，且为该变量赋值为1；\n   ![image-20230630095225432](For.assets/image-20230630095225432.png)\n   ![image-20230630095301462](For.assets/image-20230630095301462.png)\n3. 在【自加】函数下方添加【日志消息】函数，且将自加的结果进行输出；\n   在消息编辑框中，鼠标右击，选择“显示智能提示”，选择需要输出的变量。\n   ![image-20230630095557723](For.assets/image-20230630095557723.png)\n4. 执行组件，当满足 “x>3”  时，终止循环，如下图所示：\n   ![image-20230630095717749](For.assets/image-20230630095717749.png)\n#### **示例二**（嵌套循环）：创建外层循环变量 i ，赋值为1；内层循环变量 j ，赋值为2。 i 和 j 分别进行自加，直到 “j>5” 结束内层循环，“i>1” 结束外层循环。\n1. 添加【repeat 循环】函数，设置终止循环条件 “i>1” ；\n   ![image-20230630102101615](For.assets/image-20230630102101615.png)\n2. 在【repeat 循环】下添加【自加】函数，在该函数中创建变量 i ，且为该变量赋值为1；\n   ![image-20230630102814158](For.assets/image-20230630102814158.png)\n3. 在【自加】函数下再添加一个【repeat 循环】函数，循环终止条件设置为 “j>5”；\n   ![image-20230630103005052](For.assets/image-20230630103005052.png)\n4. 在内层的【repeat 循环】下添加【自加】函数，在该函数中创建变量 j ，且为该变量赋值为2；\n   ![image-20230630103110392](For.assets/image-20230630103110392.png)\n5. 在内层的【自加】函数下，添加【日志消息】函数，将内层的变量 j 的值进行输出；\n   ![image-20230630103243104](For.assets/image-20230630103243104.png)\n6. 在整个内层【repeat 循环】函数的下方添加【日志消息】函数，将外层的变量 i 的值进行输出；\n   ![image-20230630103449594](For.assets/image-20230630103449594.png)\n7. 执行组件，当满足 “j>5” 时终止内层循环，当满足 “i>1” 时终止外层循环。\n   ![image-20230630103756881](For.assets/image-20230630103756881.png)\n### Case&Case Value\nCase 语句是 Switch 语句中的一个分支，用于匹配特定的值。\nCase 与 Case Value 搭配使用，将会执行第一个与 Case 条件相匹配的 Case Value 分支下的语句，语句执行完成后直接跳出 Case ，不再执行 Case 下的其他 Case Value 分支。\n#### 示例一：\n嵌套多分支，Case 条件为布尔类型的表达式，Case Value 条件中，0 和 1 表示 “False” 和 “Ture” 。\n执行结果：条件满足嵌套语句中的第二个 Case Value 语句，输出该语句下的信息：“a < b，结果为 True” 。\n![image-20240308102441603](For.assets/image-20240308102441603.png)\n#### 示例二：\n循环调用，在条件循环下添加【Case】和【Case Value】函数。为变量 “test” 赋值为1，【条件循环】函数的条件设置为 “test<=5” ,【Case Value】函数条件分别设置为1、2、3、4、6，对变量 “test” 进行自加处理。\n执行结果：当 Case Value 条件与 Case 条件相匹配时，执行 Case Value 下的语句，执行完成后跳出 Case 语句，重新执行【条件循环】在重新进入 Case 语句，知道条件不满足【条件循环】时，脚本执行结束。\n![image-20240308102500895](For.assets/image-20240308102500895.png)"
  },
  {
    "text": "## 异常处理\n### 异常传递\n异常传递，相当于try finally end。\n当【尝试执行】下的函数出现异常，则会直接跳转到【传递执行】下的函数执行，待【传递执行】下的函数执行完成后，退出整个组件的执行。\n示例如下：\n1. 在组件编辑面板中，添加【异常传递】函数；\n   ![image-20230630161147859](Error.assets/image-20230630161147859.png)\n2. 在【尝试执行】函数下添加【日志消息】函数，属性设置如下图所示：\n   ![image-20230630161305883](Error.assets/image-20230630161305883.png)\n3. 在【日志消息】函数下添加【Excel应用程序范围】，传入指定的文件路径；\n   ![image-20230630161435963](Error.assets/image-20230630161435963.png)\n4. 在【Excel应用程序范围】函数下添加【写入单元格】函数，此处可设置出错点（如：工作表名称不存在）函数属性设置如下：\n   ![image-20230630161825638](Error.assets/image-20230630161825638.png)\n5. 在【写入单元格】函数下，添加【读取单元格】函数和【日志消息】函数，设置如下图所示：\n   ![image-20230712143747264](Error.assets/image-20230712143747264.png)\n   ![image-20230712143811845](Error.assets/image-20230712143811845.png)\n6. 在【传递执行】函数下，添加【日志消息】函数、【读取单元格】函数，如下图所示：\n   ![image-20230712144002646](Error.assets/image-20230712144002646.png)\n   ![image-20230712144015145](Error.assets/image-20230712144015145.png)\n   ![image-20230712144032148](Error.assets/image-20230712144032148.png)\n7. 在【尝试执行】的整个循环外，添加【日志消息】函数，配置入下图所示：\n   ![image-20230712144250710](Error.assets/image-20230712144250710.png)\n8. 组件设置完成后，执行组件。在【写入单元格】函数处出现异常，则跳转到【传递执行】下的函数执行，执行结果如图所示：\n   ![image-20230712144736478](Error.assets/image-20230712144736478.png)\n### 异常捕捉\n【异常捕捉】函数，即对异常进行捕捉，相当于try except end。\n当函数里的“出错时继续”下拉选择了“RaiseException”，那么组件执行到此函数时，若有异常错误就会执行到【捕捉错误】函数。\n示例如下：\n1. 在组件编辑界面，添加【异常捕捉】函数；\n   ![image-20230712150150640](Error.assets/image-20230712150150640.png)\n2. 在【尝试执行】函数下添加【获取下一个交易日】函数和【日志消息】函数，【获取下一个交易日】函数的“出错时继续”的属性栏选择“RaiseException”，（可在此处设置出错点：如日历名称填写一个不存在的日历名称）设置如下图所示：\n   ![image-20230712150547992](Error.assets/image-20230712150547992.png)\n   ① ：“出错时继续”类型选择“RaiseException”；\n   ② ：“日历名称”填写一个不存在的日历名称；\n   ③ ： “结果”，创建一个输出变量名称为“交易日”，通过鼠标右击-选择“创建变量”的方式进行创建。\n   将变量“交易日”的结果进行输出：\n   ![image-20230712150940037](Error.assets/image-20230712150940037.png)\n3. 添加【是否交易日】函数和【日志消息】函数，设置的结果如下所示：\n   ![image-20230712151129713](Error.assets/image-20230712151129713.png)\n   ① ： “出错时继续”类型选择“RaiseException”；\n   ② ： “日历名称”填写一个存在的日历名称；\n   ③ ：  “结果”，创建一个输出变量名称为“是否交易日”，通过鼠标右击-选择“创建变量”的方式进行创建。\n   将变量“是否交易日”的结果进行输出：\n   ![image-20230712151422288](Error.assets/image-20230712151422288.png)\n4. 在【捕捉错误】函数下添加【日志消息】函数，设置如下所示：\n   ![image-20230712151550722](Error.assets/image-20230712151550722.png)\n5. 待组件设置完成后，执行组件。【获取下一个交易日】函数有异常错误，因此会跳过【是否交易日】函数，直接执行到【捕捉错误】下的函数，执行结果如下图所示：\n   ![image-20230712151713952](Error.assets/image-20230712151713952.png)\n### 命令执行异常处理\n在大部分函数的“常见”属性中，都有执行异常处理的选项，如“出错时继续”的两种情况如下：\n- True：表示出错时继续往下执行。\n- False：表示出错时停止脚本执行并退出，并提示错误信息。默认值为False。\n错误信息包含以下几项内容：\n![image-20230608110850421](Error.assets/image-20230608110850421.png)\n- 级别：正常、离线、未知、提示、警告、次要、主要、严重这8种情况供选择，一般情况下设置为“严重”。\n- 数据：可选填，默认的值为系统返回的错误信息。\n- 描述：可选填，可自定义增加描述信息。\n- 返回：组件相互调用时的直接返回值。\n### 条件判断结果异常处理\n根据自定义的条件判断，若结果非预期，则主动触发执行中断。\n示例：如获取文本内容，若获取到的内容为“ABC”时，终止执行并报告异常退出。\n1. 在组件编辑面板中，添加\"获取文本\"函数，单击该函数的“指明在屏幕上”，指明需要获取的文本，待指明完成后，创建输出变量即可。设置效果如下：\n   ![image-20230608112506189](Error.assets/image-20230608112506189.png)\n2. 添加“IF条件”函数，条件设置为“text = ABC”，当满足该条件时，则进行报错处理，设置效果如下：\n   ![image-20230608112622672](Error.assets/image-20230608112622672.png)\n3. 添加“终止”函数，填写级别、数据、描述、返回等信息，设置效果如下图所示：\n   ![image-20230608112838627](Error.assets/image-20230608112838627.png)\n4. 执行组件，效果如下：\n   ![image-20230608112904973](Error.assets/image-20230608112904973.png)"
  },
  {
    "text": "## 运算符\n运算符是一种功能符号，可以用于进行各种数据之间的运算。常用运算符包括算数运算符、比较运算符、逻辑运算符。\n### 算数运算符\n用于完成基本的数学运算，包括加、减、乘、除等。\n| 运算符 | 含义       | 示例    |\n| ------ | ---------- | ------- |\n| +      | 加法运算   | X + Y   |\n| -      | 减法运算   | X – Y   |\n| *      | 乘法运算   | X * Y   |\n| /      | 除法运算   | X / Y   |\n| Div    | 整除运算   | X Div Y |\n| Mod    | 取余数运算 | X Mod Y |\n### 比较运算符\n| 运算符 | 含义     | 示例   |\n| ------ | -------- | ------ |\n| >      | 大于     | X > Y  |\n| <      | 小于     | X < Y  |\n| >=     | 大于等于 | X >= Y |\n| <=     | 小于等于 | X <= Y |\n|  Y |\n### 逻辑运算符\n| 运算符 | 含义   | 示例               |\n| ------ | ------ | ------------------ |\n| And    | 与运算 | (X> 1) and (Y > 1) |\n| Or     | 或运算 | (X> 1) or (Y > 1)  |\n| Not    | 非运算 | Not (X = 0)        |"
  },
  {
    "text": "# 基础知识\n## 组件\n### 组件说明\n组件是具备某特定功能的脚本，是具体场景实现中抽象出来的“功能零件”。\n1. 组件是流程的组成部分，作为流程的一个单独节点。\n2. 组件是具体场景实现中的一个特定功能，比如银行流水下载场景中，网银登录可抽象为一个组件；进入对应菜单查询下载流水可抽象为一个组件；关闭浏览器可抽象为一个组件等。\n### 脚本向导说明\n脚本向导是组件编程中的一种可视化开发语言，用户可以通过拖拉拽的形式进行脚本向导组件的开发。\n### 进入脚本向导路径\n1. 进入【组件管理】页面：\n   在界面左边菜单栏，单击“脚本管理”，在页面中单击“组件管理”，进入组件管理界面。\n   ![image-20240307090846673](Component.assets/image-20240307090846673.png)\n2. 增加组件：\n   在【组件管理】界面，选中一个分组，单击“增加”-“增加组件”，组件类型选择“脚本向导”。\n   ![image-20240307091006473](Component.assets/image-20240307091006473.png)\n   ![image-20240307091404777](Component.assets/image-20240307091404777.png)\n3. 增加完组件后，会自动进入到脚本向导编辑页面，页面各区域划分如下。\n   ![image-20240307093016097](Component.assets/image-20240307093016097.png)\n   ①：工具栏；\n   ②：基础组件；\n   ③：组件编辑区域；\n   ④：函数属性设置区域；\n   ⑤：编译和运行结果查看，以及变量和参数信息的查看。\n   ### 组件编程基础\n   组件开发将分为以下几步进行介绍：\n   - [添加函数](#添加函数)\n   - [删除函数](#删除函数)\n   - [复制函数](#复制函数)\n   - [移动函数](#移动函数)\n   - [注释函数](#注释函数)\n   - [查看帮助](#查看帮助)\n   - [收藏函数](#收藏函数)\n   - [最近使用](#最近使用)\n   #### 添加函数\n   在组件编辑面板中，添加函数的方式有以下几种：\n   - 双击添加\n     在搜索栏搜索处需要添加的函数，鼠标双击该函数进行添加。\n     ![image-20230609163226299](Component.assets/image-20230609163226299.png)\n   - 拖拽添加：在搜索栏搜索需要添加的函数，鼠标拖拽到指定编辑区域。\n   - 右键插入添加\n     在编辑区域，鼠标右击，在弹出的菜单栏中选择“插入”。\n     ![image-20230609163439287](Component.assets/image-20230609163439287.png)\n     在编辑框中输入需要添加的函数名称。\n     ![image-20230609163527330](Component.assets/image-20230609163527330.png)\n     ![image-20230609163646883](Component.assets/image-20230609163646883.png)\n   #### 删除函数\n   选中需要删除的函数，可直接按Delete键进行删除，也可选中该函数鼠标右击，单击【删除】按钮进行删除。\n   ![image-20230609163807601](Component.assets/image-20230609163807601.png)\n   #### 复制函数\n   选中需要复制的函数，可通过Ctrl+C和Ctrl+V进行复制粘贴，也可通过鼠标右键，在弹出菜单的复制和粘贴按钮进行复制粘贴。\n   ![image-20230609164027821](Component.assets/image-20230609164027821.png)\n   #### 移动函数\n   选中需要移动的函数，拖拽移动到指定位置。\n   ![image-20230609164122045](Component.assets/image-20230609164122045.png)\n   #### 注释函数\n   选中需要注释的函数，可通过鼠标邮件，在弹出框中单击【注释】按钮进行注释，也可通过“Ctrl+/”快捷键进行注释，注释的函数颜色显示为绿色。\n   ![image-20230609164256946](Component.assets/image-20230609164256946.png)\n   ![image-20230609164312819](Component.assets/image-20230609164312819.png)\n   #### 查看帮助\n   1. 在可视化编辑区域，用户可查看组件的功能解析、使用要求等，查看组件帮助的方法如下：\n      1. 鼠标在函数属性项上悬浮，可查看对应参数的相关说明；\n         ![image-20240307093745849](Component.assets/image-20240307093745849.png)\n      2. 选中可视化编辑区域的组件右键，在下拉菜单中单击“帮助”，可通过以下方式查看函数帮助信息：\n         ![1712562237201](Component.assets/1712562237201.png)\n          ① 帮助-帮助：函数的简易使用说明，程序自带帮助，单击可查看到此函数的的简要说明。 \n         ![1712562276146](Component.assets/1712562276146.png)\n          ② 帮助-帮助(在线)：在线版的函数使用**详细**说明，此处的使用说明内容和“帮助-帮助(服务器)”一致，但是此处说明**需连接外网**才能查看。 \n         ![1712562499436](Component.assets/1712562499436.png)\n          ③ 帮助-帮助(服务器)：离线版的函数使用**详细**说明，此处的使用说明内容和“帮助-帮助(在线)”一致，无需连接外网但是需先进行服务器帮助信息配置： \n         -  在“产品下载中心”获取 “win_script_wizard_help_document.zip” 文件，将其存放到 “~server/Resources” 路径下，然后单击“帮助”-“帮助(服务器)”，等待完成配置即可。 \n           ![1712562585793](Component.assets/1712562585793.png)\n         - 完成配置后，单击“帮助”-“帮助(服务器)”，则会可通过访问服务器查看函数的详细说明。\n           ![1712562810970](Component.assets/1712562810970.png)\n   #### 收藏函数\n   用户选中脚本向导函数后右键，可将选中的脚本向导函数添加至收藏，已收藏的脚本向导函数将记录到“收藏函数”分组里，其中“控制”分组下的脚本向导函数不支持收藏。\n   ![1711701813513](Component.assets/1711701813513.png)\n   #### 最近使用\n   “最近使用”分组将动态记录用户在脚本向导编辑界面中最近使用的函数和调用的组件，最近第一个将显示在最上层，最多支持10个。\n   ![image-20240422113632251](Component.assets/image-20240422113632251.png)"
  },
  {
    "text": "## 任务\n### 什么是任务\n 用户可以根据自身需求配置不同类型的自动任务，如系统任务、流程任务、报表任务、敏捷任务等，其中系统任务只有管理员登录才能查看到。自动任务支持配置成每天、每周、每月、一次、每分/每小时、服务器启动、用户登录以及特定事件来触发执行。另外，当天流程任务会显示在【任务延时】界面，若此时需要延长流程任务开始执行的时间，则可以在【任务延时】界面进行延时操作。变更完成后的流程任务执行时间以变更后的时间为准，并且变更仅一次有效。\n### 任务配置\n创建自动任务的操作步骤如下：\n1. 进入【任务配置】菜单\n   在界面左边菜单栏，单击【任务管理】，在页面中单击【任务配置】，进入任务配置界面。\n   ![image-20240307113647172](Task.assets/image-20240307113647172.png)\n2. 新建任务\n   选中左边树中任务列表中的一个任务，把鼠标移到当天日期下单击【新建任务】，弹出“任务配置”弹框后进行相关信息设置即可。\n   ![1712909517883](Task.assets/1712909517883.png)\n3. 配置任务\n    填写好“计划名称”、“节假日方案”和“执行条件”后单击“确定” 。\n   ![1712910429717](Task.assets/1712910429717.png)\n   任务配置弹框说明：\n   计划名称：任务计划的名称。\n   节假日方案：选择当前系统适用的节假日方案，节假日方案来源【日历配置】界面的默认日历。系统默认不选，不选则不受节假日方案限制。\n   执行条件：根据实际进行选择。\n   请设置执行条件区域：根据执行条件的选择进行具体时间的设置。"
  },
  {
    "text": "## 流程\n### 流程设计原则\n流程是RPA的核心，一个流程通常对应一个场景任务的自动化实现。 \n流程设计相当于加工厂，可以把多个跟场景相关的功能组件，通过一定的逻辑与顺序连起来，加上参数信息，形成流程。\n流程设计的原则：\n1. 一个流程必须至少包含“开始”和“结束”节点。\n2. 流程连接线必须有闭环，即流程节点应该直接或者间接（通过其他节点）与“开始”和“结束”节点相连。\n3. 流程连接线可设置条件，但必须结合流程节点的执行返回使用。\n4. 一个流程可被另一个流程直接引用，支持无限多层引用。\n5. 一个流程可直接嵌套子流程，支持无限下钻嵌套。\n### 流程组成及说明\n![image-20240307105909685](Flow.assets/image-20240307105909685.png)\n### 流程设计介绍\n流程设计的目的是将各操作按预定的执行顺序、执行条件连接在一起，编辑完成后提交给流程视图和任务配置，以实现批量操作自动化。\n一个完整的流程，必须具有”开始“和”结束“节点作为流程的固定节点，其他节点为实现机器人流程自动化功能性的节点。\n在进行流程图的设计时，可将流程设计为单分支流程或多分支流程。\n### 流程创建\n1. 进入【流程设计】页面：\n   在界面左边菜单栏，单击“流程管理”，在页面中单击“流程设计”，进入流程设计界面；\n   ![image-20240307110513373](Flow.assets/image-20240307110513373.png)\n2. 增加流程分组：\n   在【流程设计】页面，单击“增加”-“文件夹”，增加流程分组；\n   ![image-20240307110810775](Flow.assets/image-20240307110810775.png)\n   ![image-20240307110850788](Flow.assets/image-20240307110850788.png)\n3. 增加流程：\n   选中一个分组，单击“增加”-“流程图”，增加流程。在“增加流程”弹框中，一般只需要填写“流程名称”即可，若需要将新增流程关联到运营管理平台，才需填写其他属性。\n   ![image-20240307111005550](Flow.assets/image-20240307111005550.png)\n   ![image-20240307111055100](Flow.assets/image-20240307111055100.png)"
  },
  {
    "text": "## Agent安装\n1. 获取 Agent 程序\n   打开浏览器，登录网址：http://服务器IP:端口/index.html ，单击“下载”，下载代理端 Agent 程序，如下图所示：\n   > **[info]  提示**  \n   >\n   >  &emsp;服务器 IP ：Server 安装在本地，则可直接使用 127.0.0.1 地址，否则需要使用实际 IP 。\n   ![image-20241028191230479](Agent.assets/image-20241028191230479.png)\n2. 双击运行 Agent 程序，并设置连接 Server 的 IP 和端口\n   将下载的 \"Agent.exe\" 拷贝至安装目录，如：“D：/krpa/Agent/Agent.exe”，双击 “Agent.exe” 运行。\n   程序界面默认最小化至托盘，出现 ![1669363457455](Agent.assets/1669363457455.jpg) 这种状态，说明当前 Agent 未连接至 Server 服务器，需要配置 Server 所在的 IP 和端口。右键 ![1669363457455](Agent.assets/1669363457455.jpg) 图标，选择“配置信息”，在弹出窗口中完成配置，如下图所示。\n   ![image-20221129153622315](Agent.assets/image-20221129153622315.png)\n   ![image-20230423143524247](Agent.assets/image-20230423143524247.png)\n3. Agent 连接成功标志\n   设置完成后，单击“确定”。若托盘图标变成 ![1669364391948](Agent.assets\\1669364391948.jpg) ，则说明当前 RPA 机器人已设置成功，此时双击 ![1669364391948](Agent.assets\\1669364391948.jpg) 图标，弹出 Agent 程序界面，可查看到右下角显示“连接成功”，如下图所示。\n   ![image-20221129153905486](Agent.assets/image-20221129153905486.png)"
  },
  {
    "text": "## Web安装\n1. “web.dat” 文件的获取途径：\n   - 内部人员：可在产品下载中心网站上进行下载；\n     ![image-20230807102441188](Web.assets/image-20230807102441188.png)\n   - 外部人员：由项目实施人员提供。\n2. 放置 “web.dat” 至指定位置，并重启 Server\n   将获取到的 “web.dat” 文件放到 “Server.exe” 同目录下，双击  “Server.exe” 启动 Server 服务器。\n   > **[warning]  注意**  \n   >\n   >  &emsp;若当前 Server 已启动，则需要在托盘右键 ![1669366217173](Web.assets/1669366217173.jpg) 图标退出Server，再重启 。 （ ![1669366217173](Web.assets/1669366217173.jpg)为旧版本 Server 图标，新版本图标已更新为![1695201721460](Web.assets/1695201721460.png)） \n3. 登录 Web 端控制台\n   打开浏览器，登录网址：http://服务器IP:端口/web/login.html 。\n   > **[info]  提示**  \n   >\n   >  &emsp;服务器 IP ：Server 安装在本地，则可直接使用 127.0.0.1 地址，否则需要使用实际 IP 。\n   ![image-20221125172526007](Web.assets/image-20221125172526007.png)\n   输入初始化用户名和密码，单击登录可成功进入系统首页，如下图所示。\n   > **[info]  提示**  \n   >\n   > - 初始化用户 ：admin  \n   > - 初始化密码：1\n   ![image-20221125172851173](Web.assets/image-20221125172851173.png)\n5. 查看菜单模块\n   单击左侧 ![1669368597468](Web.assets/1669368597468.jpg) 图标，可展示系统菜单模块。\n   ![image-20221129155806153](Web.assets/image-20221129155806153.png)"
  },
  {
    "text": "# K-RPA安装部署\n本章节主要介绍如何在 Windows 平台上安装部署 K-RPA 系统。K-RPA采用三层架构模式，由Server、Robot（Agent）、和Control三个程序组成，K-RPA属于绿色安装软件，只要获得了软件的商用版本，就可以直接进行安装。\n> **[info]  备注**  \n>\n> - K-RPA 系统遵循绿色软件理念，无需安装过程，单个文件直接拷贝即可使用，部署方便，快捷简单，支持批量升级。\n> - K-RPA 系统除支持在 Windows 平台上安装部署外，还支持在 Linux 、Arm和信创平台上进行安装部署。\n## Server安装\n1. 服务器（Server）程序安装包获取途径：\n   - 内部人员，可在产品下载中心网站上进行下载；\n     ![image-20230807102413043](Server.assets/image-20230807102413043.png)\n   - 外部人员则由项目实施人员提供。\n2. 运行 Server 程序\n   将Server程序安装包解压到安装目录下，如： “D：/krpa/Server/Server.exe” 。双击运行 “Server.exe” ，打开主界面，如下图所示。\n   ![image-20221125143608308](Server.assets/image-20221125143608308.png)\n3. 配置信息\n   单击“配置”按钮，弹出 Server 服务器“配置”窗口，如下图所示。\n   ![image-20221129154717364](Server.assets/image-20221129154717364.png)\n   配置说明：\n   - 名称：Server 描述，自定义即可。\n   - 端口：Server 对外的服务端口，建议12580，也可自定义。 Robot 和 Control 都是通过此端口与 Server 建立 Socket 连接。端口开通的方向是： Robot 和 Control 往 Server 方向。\n   - 自动打开“下载页面”：勾上此选项，在 Server 启动时会自动弹出 Control 和 Robot 的下载页面和安装操作说明。\n   - 开机时自动启动：勾上此选项，Server 会随机器一同启动。\n   - 其他选项无需设置，默认即可。\n4. 返回 Server 服务器主界面\n   配置完成后，单击“确定”，回到 Server 服务器开启界面。\n   ![image-20221125143653900](Server.assets/image-20221125143653900.png)\n5. 申请授权文件\n   单击“开始/继续(S)”按钮，弹出“授权信息”窗口，将“机器标识”字符串拷贝并发送至金智维厂商，如下图所示。\n   ![image-20221129154940325](Server.assets/image-20221129154940325.png)\n   > **[warning]  注意**  \n   >\n   > - 首次安装或者授权文件已失效才需要进行授权申请。\n   > - 若需要使用网页版，则在申请授权时需要备注说明支持网页版。\n6. 导入授权文件\n   待金智维厂商收到机器标识后，会返回一个后缀名为 “.lnc” 的授权文件，此时将授权文件导入即可，如下图所示。\n   ![image-20221129155018302](Server.assets/image-20221129155018302.png)\n7. 启动 Server 服务器\n   单击“确定”按钮，如 Server 程序最小化到托盘，双击 ![1669366217173](Server.assets/1669366217173.jpg) 图标打开主界面，待启动按钮状态变成灰色即表示 Server 已启动成功，如下图所示。\n   > **[info]  说明**  \n   >\n   > &emsp; ![1669366217173](Server.assets/1669366217173.jpg) 为旧版本 Server 图标，新版本图标已更新为 ![1691659519577](Server.assets/1691659519577.png)\n   ![image-20221129155118835](Server.assets/image-20221129155118835.png)"
  },
  {
    "text": "## Control安装\n1. 获取 Control 程序\n   打开浏览器，登录网址：http://服务器IP:端口/index.html 下载控制台 Control 程序，如下图所示。\n   > **[info]  提示**  \n   >\n   >  &emsp;服务器 IP ：Server 安装在本地，则可直接使用 127.0.0.1 地址，否则需要使用实际 IP 。\n   ![image-20241028191217462](Control.assets/image-20241028191217462.png)\n2. 打开 Control 程序主界面\n   拷贝至安装目录，如：“D：/krpa/Control/Control.exe”,双击运行，打开程序的登录界面，如下图所示。\n   ![image-20221125154024688](Control.assets/image-20221125154024688.png)\n3. 设置连接 Server 的 IP 和端口\n   单击“服务器地址”，弹出“设置”窗口，将 IP 和端口设置成 Server 所在的 IP 地址和端口，如下图所示。\n   ![image-20221129154334222](Control.assets/image-20221129154334222.png)\n   单击“确定”，连接信息设置成功，如下图所示。\n   ![image-20221129154424408](Control.assets/image-20221129154424408.png)\n4. 登录 Control 控制台\n   输入初始化用户名和密码，单击登录进入系统首页，若右下角显示“连接成功”，则表示 Control 已成功连接 Server 服务器，如下图所示。\n   > **[info]  提示**  \n   >\n   > - 初始化用户 ：admin  \n   > - 初始化密码：1\n   ![image-20221129154529198](Control.assets/image-20221129154529198.png)"
  },
  {
    "text": "## PDF读取操作\n### 读取PDF页\n1. 属性介绍\n   页: 希望读取内容的位置（下标从0开始）。\n   阅读类型: 需要读取的内容的类型，支持读取“所有”，只读取“文本”和只读取“图片”三种模式。\n   文本提取选项: 可以选择提取文本的算法，默认为8。\n   图片保存路径：设置提取出的文件的保存路径。\n   图片选项：有0和非0两种选项，默认为0（无法枚举页面上的图像），非0（imageListID值）。\n   文本：将提取的文本内容存放在string变量。\n   图片文件：将提取的图片存放在string变量。\n2. 案例说明\n   给定PDF文件“test.pdf”，对其进行读取操作。\n3. 操作步骤\n   1. 使用 “PDF应用范围”函数，打开指定PDF文件。\n      ![image-20220509164444346](Read.assets/image-20220509164444346.png)\n   2. 使用 “读取PDF页”函数，读取里面的文本和图片，并将内容在控制台输出。\n      ![image-20220509164503028](Read.assets/image-20220509164503028.png)\n      运行结果如下：\n      (1) 提取的文本：\n      ![image-20220509164534425](Read.assets/image-20220509164534425.png)\n      (2) 提取的图像：\n      ![image-20220509164549896](Read.assets/image-20220509164549896.png)"
  },
  {
    "text": "## PDF写入操作\n### PDF写入文本\n1. 部分属性介绍\n   设置: 可以设置写入PDF内容的一些格式。\n   页：写入内容的位置（下标从0开始）。\n   文本: 需要写入的内容。\n   清除原数据：若勾选，会在写入数据之前清除原有的数据。\n2. 案例说明\n   给定PDF文件“test.pdf”，对其进行写入内容操作。\n3. 操作步骤\n   1. 使用 “PDF应用范围”函数，打开指定PDF文件。\n      ![image-20220509163846716](Write.assets/image-20220509163846716.png)\n   2. 使用 “PDF写文本”函数，在“输入”属性中，设置希望写入的页数位置，设置文本内容，并对写入的文本进行格式的设置。\n      ![image-20220509163909349](Write.assets/image-20220509163909349.png)\n      运行结果如下：\n      ![image-20220509163929433](Write.assets/image-20220509163929433.png)\n### 插入PDF页\n1. 常用属性介绍\n    位置: 希望插入新的PDF页的位置（下标从0开始）。\n   数量: 需要插入的PDF页的数量。\n2. 案例说明\n   给定PDF文件“test.pdf”，插入新的2页。\n3. 操作步骤\n   1. 使用 “PDF应用范围”函数，打开指定PDF文件。\n      ![image-20220509164046439](Write.assets/image-20220509164046439.png)\n   2. 依次使用 “获取PDF页数”函数，获取当前PDF的页数，使用“插入PDF页”函数，插入新的2页，再次使用“获取PDF页数”函数，获取PDF数量。\n      ![image-20220509164103675](Write.assets/image-20220509164103675.png)\n      运行结果如下：\n      ![image-20220509164117453](Write.assets/image-20220509164117453.png)\n### PDF插入图片\n1. 常用属性介绍\n   页: 希望插入图片的位置（下标从0开始）。\n   图片文件: 图片存在的路径。\n   设置：可以设置插入图片的一些格式。\n2. 案例说明\n   给定PDF文件“test.pdf”，插入一张图片。\n3. 操作步骤\n   1. 使用 “PDF应用范围”函数，打开指定PDF文件。\n      ![image-20220509164224470](Write.assets/image-20220509164224470.png)\n   2. 使用 “PDF插入图片”函数，设置图片格式。\n      ![image-20220509164242497](Write.assets/image-20220509164242497.png)\n      运行结果如下：\n      ![image-20220509164257074](Write.assets/image-20220509164257074.png)"
  },
  {
    "text": "# PDF自动化\n## PDF化基本介绍\nK-PRA支持对PDF文件的操作包括以下：\n![image-20240322141316381](PDF.assets/image-20240322141316381.png)\n注意：使用PDF相关命令需要先安装“PDF插件”。\n![image-20240322141414728](PDF.assets/image-20240322141414728.png)\n![image-20240322141349695](PDF.assets/image-20240322141349695.png)"
  },
  {
    "text": "## PDF修改操作\n### 清除PDF数据\n属性介绍：\n页: 希望具体清除哪一页数据的位置（下标从0开始）。\n![image-20220509164635754](Rework.assets/image-20220509164635754.png)\n### 删除PDF页\n属性介绍:\n起始页: 希望从哪一页开始删除的位置（下标从0开始）。\n数量：要删除的数量。\n![image-20220509164704217](Rework.assets/image-20220509164704217.png)\n### 保存PDF\n属性介绍:\nPDF文件路径: 保存PDF文件的路径。\n![image-20220509164727715](Rework.assets/image-20220509164727715.png)\n### 关闭PDF\n属性介绍:\nPDF: 要关闭的PDF文件。\n![image-20220509164742393](Rework.assets/image-20220509164742393.png)"
  },
  {
    "text": "## 开发流程机器人\n### 创建流程\n1. 单击【流程管理】-【流程设计】，进入流程编辑界面。\n   ![image-20230530101413109](Creat.assets/image-20230530101413109.png)\n2. 在【流程设计】界面，新增流程目录（*若已有目录，则可跳过此步骤*）。\n   ![image-20230601150243008](Creat.assets/image-20230601150243008.png)\n3. 选中指定分组，在该分组下新增流程。\n   ![image-20230601150351154](Creat.assets/image-20230601150351154.png)\n   ![image-20230601150441564](Creat.assets/image-20230601150441564.png)\n4. 单击“确定”后，系统自动生成一个流程模板，包含开始、组件、结束三个节点。可直接在该模板上进行编辑，也可删除该模板重新设置流程。\n   ![image-20230804145945692](Creat.assets/image-20230804145945692.png)"
  },
  {
    "text": "### 运行流程\n1. 当流程编辑完成后，需要到【流程审核】，对该流程进行审核；\n   ![image-20230804153444956](Function.assets/image-20230804153444956.png)\n2. 待流程审核完毕后，到【流程设计】界面，找到步骤1中已审核的流程，双击进入流程编辑界面；\n   ![image-20230804153550771](Function.assets/image-20230804153550771.png)\n3. 在流程编辑界面，单击【设计】（取消勾选），即可进入流程的调试模式，单击【执行】，运行流程。\n   ![image-20230804153823714](Function.assets/image-20230804153823714.png)\n4. 流程执行如下图所示：\n   ![image-20220509150752617](Function.assets/image-20220509150752617.png)"
  },
  {
    "text": "## 管控流程机器人\n流程正在运行的过程中，如果需要在另一台机器的控制台查看或者操作该流程，则可以使用该流程接管的功能把流程接管进来。\n流程接管，可在【流程接管】界面进行相关的操作，在该界面可以查看到自身有权限的流程。\n【流程接管】界面的功能场景有：调阅任务配置中正在执行的流程、调阅任务配置中执行失败的流程、临时接手其他人员正在执行的流程。\n![image-20230804155403522](manage.assets/image-20230804155403522.png)"
  },
  {
    "text": "### 查看流程执行情况\n待流程执行完成后，可在【流程管理】下的【今日流程】或者【执行历史】菜单中，查看流程执行情况。现以查看流程的执行历史为例：\n1. 在【流程管理】-【流程管控】栏中，单击【执行历史】，进入【执行历史】界面。\n   ![image-20230601145333709](Preview.assets/image-20230601145333709.png)\n   ![image-20230601145844189](Preview.assets/image-20230601145844189.png)\n2. 在【执行历史】界面，可根据条件查询流程执行情况。\n   ![image-20230601150004088](Preview.assets/image-20230601150004088.png)"
  },
  {
    "text": "### 任务配置\n[运行流程](\\流程设计\\Function.html#运行流程)章节中，执行流程的操作为手动执行流程的操作，我们也可设置自动任务，让流程自动执行，具体操作如下：\n1. 进入【任务配置】界面，配置自动任务。\n   ![image-20230601142847576](Task.assets/image-20230601142847576.png)\n2. 选中需自动执行的流程，配置自动流程任务。\n   ![image-20230601143240324](Task.assets/image-20230601143240324.png)\n3. 配置完成后，机器人即可在设定的条件下自动执行，可以在当天的任务下看到该任务的定时触发记录。\n   ![image-20230601143504820](Task.assets/image-20230601143504820.png)"
  },
  {
    "text": "# 流程设计\n## 流程编辑\n### 设置组件参数\n当流程在调用组件节点时，可设置组件的运行参数，即在用户设置组件时，可在组件中设置参数，这样便于后续运行参数值的更改。组件的运行参数需要改变时，只要在流程中对该参数进行更改即可，不需要到流程所调用的组件中进行更改。\n- 组件参数的设置\n  设置方法如图所示：\n  ![image-20240312095926471](Flowchart.assets/image-20240312095926471.png)\n- 在流程中设置组件参数\n  在流程中调用名为“接口”的组件，并且传入组件参数，将参数结果进行输出。\n  ![image-20230804093449773](Flowchart.assets/image-20230804093449773.png)\n  执行流程，待流程执行完成后，选中该组件节点，鼠标右击，选择查看步进日志，可查看结果。\n  ![image-20230804093607423](Flowchart.assets/image-20230804093607423.png)\n  ![image-20230804093546111](Flowchart.assets/image-20230804093546111.png)\n### 设置流程属性\n#### 整个流程\n对于流程的设计，用户在使用流程时，可根据不同的需求进行不同的设置，具体请查看下述描述。\n在流程设计界面，只有当勾选了“设计”，才能进行流程的编辑，当取消“设计”后，便可对流程进行“执行”操作。\n当前处于可编辑状态：\n![image-20230804094909160](Flowchart.assets/image-20230804094909160.png)\n当前处于可执行状态：\n![image-20230804094941423](Flowchart.assets/image-20230804094941423.png)\n单击流程编辑界面的空白处，在界面的右侧会显示流程属性的设置项，该属性是针对整个流程的设置，此处可将该属性分为三部分进行介绍，如下所示：\n[执行选项](#执行选项)\n[执行限制](#执行限制)\n[通知设置](#通知设置)\n##### 执行选项\n![image-20230804100537909](Flowchart.assets/image-20230804100537909.png)\n- 过程：当勾选了“过程”，在流程执行完成后，可在【执行历史】界面，回放流程执行过程。\n- 截图：当勾选上“截图”，可将流程执行的界面进行截图，待流程执行完成后，可单击查看截图效果。\n  ![image-20230804101137017](Flowchart.assets/image-20230804101137017.png)\n  ![image-20230804101201058](Flowchart.assets/image-20230804101201058.png)\n  ![image-20230804101219555](Flowchart.assets/image-20230804101219555.png)\n- 录屏：录制流程执行过程。在使用录屏功能时，要先做好录屏配置工作。具体录屏配置，请查看[《录制屏幕功能操作手册》](http://doc.kingsware.cn:8096/public/Uploads/Doc/B5A01561B0E24FB614BF110AB8650F93/index.html)。\n- 检查节点：勾选“检查节点”，则在执行此流程时，会检查流程关联的代理端的状态及节点的状态。\n  - 未勾选“检查节点”，单击【执行】，在“提示”窗口中无任何节点相关的提示信息；\n    ![image-20230804101921804](Flowchart.assets/image-20230804101921804.png)\n  - 勾选“检查节点”，单击【执行】，在“提示”弹框中将会提示相关的节点信息。\n    ![image-20230804102030829](Flowchart.assets/image-20230804102030829.png)\n- 编辑参数：\n  通过单击【编辑参数】按钮功能进行参数编辑。在流程设计编辑界面中，单击【编辑参数】-在弹出的“运行配置”弹框中定义一个参数。\n  ![image-20230804110642296](Flowchart.assets/image-20230804110642296.png)\n##### 执行限制\n对于流程进行执行限制的设置，单击“无限制”，弹出“执行限制”窗口，在此窗口可以对流程进行每天执行次数、每天执行时间、流程执行日期、每周执行日期、用户确认、流程互斥等限制，如下图所示：\n![image-20230804111550033](Flowchart.assets/image-20230804111550033.png)\n执行限制具体的设置，请查看[《K-RPA软件机器人用户操作手册》](http://doc.kingsware.cn:8096/public/Uploads/Doc/F9E2872F5A30B7E3A2F482499F3ED0B3/index.html)。\n##### 通知设置\n流程执行的结果或其他状态的信息，可通过短信、微信、邮件、事件的方式通知给指定的人员。在进行短信、微信、邮件通知前，需要进行相关的配置，且被通知人员需要配有手机号码、微信号或者邮箱账号。\n![image-20230804113616396](Flowchart.assets/image-20230804113616396.png)\n#### 流程节点\n在流程设计中，有开始、结束、操作、确认、汇总、提示、引用、嵌套、组件和批处理等10个节点供选择。下述将对这10个节点进行介绍。\n- 开始节点：流程的起点，标志着流程的开始，在一个完整的流程里必须存在“开始”节点。\n- 结束节点：流程的终点，标志着流程的完成，在一个完整的流程里必须存在“结束”节点。\n- 操作节点：双击操作节点，在弹出的“选择指标”弹框中，选择相应的指标，该指标来源于资源池。\n  **使用场景：**在流程中调用操作节点，可通过选择指标实现流程要执行的动作。\n  ![image-20230804141030120](Flowchart.assets/image-20230804141030120.png)\n- 确认节点：指定确认用户，当流程执行到该节点是，需要用户输入密码进行确认，流程方可继续执行。\n  **使用场景：**在需要复核人员进行确认才能继续执行流程的场景中，可以通过应用确认节点，等待流程复核人员确认流程节点。\n- 汇总节点：将多个分支的流程，汇总成一条，连线情况如下所示：\n  **使用场景：**在流程中调用汇总节点，可检验此节点前至少有一个流程分支执行成功，若执行成功就会执行此节点。\n  ![image-20230804141209221](Flowchart.assets/image-20230804141209221.png)\n- 提示节点：在一个流程里，若提示节点之前连接了多个流程节点，则必须要前面的所有流程节点都正常执行，才会执行到提示节点，流程才会继续往下执行，一旦在提示节点之前有一个节点有异常，则该流程都无法继续往下执行。\n  **使用场景：**在流程中调用提示节点，可检验流程中此节点前所有分支是否执行成功，若都执行成功就会执行此节点。\n  ![image-20230804141516231](Flowchart.assets/image-20230804141516231.png)\n- 引用节点：双击引用节点，在弹出的“引用流程”弹框中，选择需要引用的流程，引用的流程必须是已审核的流程。\n  **使用场景：**在主流程中调用引用节点，可在该节点中引用单条已有流程，实现主流程更加简洁明了。\n- 嵌套节点：双击嵌套节点，进入嵌套节点的子流程界面，在该界面可以编辑子流程，编辑完成后保存，返回【上一级】即可。\n  **使用场景：**当一个流程中存在很多复杂活动或分支时，可通过应用嵌套节点嵌套多个独立子流程，实现主流程更加简洁明了。\n- 组件节点：选中组件节点进行双击，进入组件节点的编辑界面，在该界面中选择该节点需要调用的组件及指定执行的代理机器。\n  **使用场景：**在流程中调用组件节点，通过组件中的函数实现流程要执行的动作，同时可以进行传参，通用性较高。\n  ![image-20230804115013592](Flowchart.assets/image-20230804115013592.png)\n  > **[info]  提示**\n  >\n  >  - 所调用的组件数据来源于[组件管理](\\组件设计\\manual_addition.html)  界面所创建的组件。\n  >  - 所调用的组件为已审核组件。\n- 批处理节点：双击批处理节点，在此节点中可以设置多个执行流程的代理，然后选择执行模式（并行执行或串行执行），即可实现同一流程在多台机器中执行。\n  **使用场景：**在需要多台机器执行相同流程的场景中，可以通过应用批处理节点，使这些机器一起执行流程。\n  ![image-20240416195516868](Flowchart.assets/image-20240416195516868.png)\n#### 流程线\n在流程编辑界面，添加了流程节点后，需要通过连线将各个节点间串联起来。流程各节点间连线的方法如下：\n在界面右侧流程节点栏，勾选“连接线”，鼠标移动到编辑区域的节点处，单击已增加的节点-按住鼠标拖动至另外一个节点-松开鼠标即可完成节点连线。\n![image-20230804142106447](Flowchart.assets/image-20230804142106447.png)\n > **[info]  提示**  \n >\n >  &emsp;快速连线的方法：勾选上“连接线”，接着按住Ctrl，用鼠标逐个节点进行连接，连接完成后，需取消“连接线”的勾选 。\n### 流程运行\n在多节点的流程中，各个流程节点所选择的执行代理机器可根据实际情况进行选择，不需要所有节点的执行机器必须相同。\n对于流程各节点的执行代理机器都相同的，可称为单机器运行流程；\n对于流程各节点的执行代理机器不相同的，可称为多机器运行流程。\n#### 单机器运行流程\n在下述的流程例子中，流程的各个节点都选择同一台执行代理机器。\n![image-20230804142924602](Flowchart.assets/image-20230804142924602.png)\n#### 多机器人协同流程\n在下述的例子中，K-RPA流程支持多机器人协同执行，即一个流程不同的节点可以选择不同的执行代理机器进行执行。\n![image-20220509154806780](Flowchart.assets/image-20220509154806780.png)"
  },
  {
    "text": "# 流程设计\n## 流程设计原则及组成\n### 流程设计原则\n流程是RPA的核心，一个流程通常对应一个场景任务的自动化实现。 \n流程设计相当于加工厂，可以把多个跟场景相关的功能组件，通过一定的逻辑与顺序连起来，加上参数信息，形成流程。\n流程设计的原则：\n1. 一个流程必须至少包含“开始”和“结束”节点。\n2. 流程连接线必须有闭环，即流程节点应该直接或者间接（通过其他节点）与“开始”和“结束”节点相连。\n3. 流程连接线可设置条件，但必须结合流程节点的执行返回使用。\n4. 一个流程可被另一个流程直接引用，支持无限多层引用。\n5. 一个流程可直接嵌套子流程，支持无限下钻嵌套。\n### 流程组成及说明\n![image-20230726163659540](Flow.assets/image-20230726163659540.png)"
  },
  {
    "text": "### 编辑流程节点\n> **[info]  提示**  \n>\n> - 节点增加：在流程编辑界面右侧的流程节点栏，单击需要增加的节点（被选中的节点，字体将会变成绿色），鼠标移动到流程编辑界面的空白处，鼠标单击，即可完成节点的添加。\n> - 节点或连线的删除：鼠标选中需要删除的节点，单击“Delete”键，即可完成节点的删除操作。\n> - 节点连线：在界面又测流程节点栏，勾选“连接线”，鼠标移动到编辑区域的节点处，单击已增加的节点-按住鼠标拖动至另外一个节点-松开鼠标即可完成节点连接。\n 在增加完流程后，会自动生成一个以开始节点、结束节点和组件节点所组成的流程模板。我们可在该流程的基础上进行编辑。\n此处以组件节点为例进行介绍。\n![image-20230804150833777](Adit.assets/image-20230804150833777.png)\n1. 在流程编辑界面，选中组件节点双击，在“选择组件”窗口中，选择要调用的组件且选择执行该节点的代理机器；\n   ![image-20230804151031347](Adit.assets/image-20230804151031347.png)\n2. 待流程编辑完成后，单击【保存】，即可保存当前所编辑的流程。\n   ![image-20230804151318829](Adit.assets/image-20230804151318829.png)\n   若流程名称右侧存在“*”号，则表明该流程未保存，则需要先进行保存。\n   ![image-20230804151303010](Adit.assets/image-20230804151303010.png)"
  },
  {
    "text": "## Excel写入操作(基于COM)\n### Excel写入范围\n1. 参考读取范围的步骤，把Excel内容读入到Table。\n   ![image-20220509162652044](COMwrite.assets/image-20220509162652044.png)\n2. 添加新的“Excel应用程序范围”，填写新建的工作簿路径。\n   ![image-20220509162707188](COMwrite.assets/image-20220509162707188.png)\n3. 添加“写入范围”命令，并填写工作表名称，起始单元格、输入表（Table）、勾选增加标头。\n   ![image-20220509162719055](COMwrite.assets/image-20220509162719055.png)\n4. 运行组件，查看输出文件内容。\n   ![image-20220509162737710](COMwrite.assets/image-20220509162737710.png)\n### Excel写入单元格\n &emsp;&emsp;范围：单元格表达式，如A20。\n &emsp;&emsp;工作表名称：如Sheet1。\n &emsp;&emsp;输入值：填写要填入单元格的内容。\n![image-20220509162812929](COMwrite.assets/image-20220509162812929.png)"
  },
  {
    "text": "## Excel写入操作(基于Workbook文件读写)\n### 写入范围\n1. 属性介绍\n   起始单元格: 从指定单元格开始的一行中写入值。\n   工作表名称：需要写入的工作簿名称。\n   数据表: 要写入单元格范围的数据。\n   工作簿路径: 需要写入的Excel文件路径。\n   添加标头：如果选中，将获取指定表格范围的标题  。\n   密码：Excel文件密码(如无可忽略)。\n2. 案例介绍\n   如图，通过Workbook分类下的读取范围和写入范围命令，包括：工作表名称、数据表（Table）、写入的工作簿路径。\n   ![image-20220509163212423](Workbookwrite.assets/image-20220509163212423.png)\n   ![image-20220509163224850](Workbookwrite.assets/image-20220509163224850.png)\n### 写入单元格\n单元格：单元格表达式，如A20。\n工作表名称：如Sheet1。\n文本：填写要填入单元格的内容。\n工作簿路径：写入工作簿的路径。\n![image-20220509163306753](Workbookwrite.assets/image-20220509163306753.png)"
  },
  {
    "text": "## Excel读取操作(基于Workbook文件读写)\n### 读取范围\n1. 添加“读取范围”命令（系统-文件-workbook-读取范围），并为输出数据表创建一个变量“Table”。\n   常用属性介绍:\n   工作簿地址：填写Excel文件的路径。\n   工作表名称：填写工作表名称。\n   范围: 需要读取的范围，格式（如’A1:E10’）;如果未设值，将会读取整个表格; 如果将范围指定为某个单元格(如：’A2’)，则读取从该单元格开始的整个表格。 \n   添加标头：如果选中，将获取指定表格范围的标题。\n   ![image-20220509162405382](Workbookread.assets/image-20220509162405382.png)\n2. 打印数据查看：添加“输出数据表”命令，选择输入为上一步产生的“Table”，并为输出创建一个变量“str_tmp”，然后用“日志消息”命令打印出str_tmp。\n   ![image-20220509162509274](Workbookread.assets/image-20220509162509274.png)\n   ![image-20220509162521576](Workbookread.assets/image-20220509162521576.png)\n3. 执行结果：\n   ![image-20220509162535939](Workbookread.assets/image-20220509162535939.png)\n### 其他读取操作\n包括读取列、读取单元格、读取单元格公式、读取行等。\n![image-20220509162554805](Workbookread.assets/image-20220509162554805.png)"
  },
  {
    "text": "## Excel其他操作\n### 基于COM的命令集合\n![image-20240312103427001](Other.assets/image-20240312103427001.png)\n![image-20240312103507807](Other.assets/image-20240312103507807.png)\n![image-20240312103553330](Other.assets/image-20240312103553330.png)\n### 基于Workbook文件读写的命令集合\n![image-20240312103711940](Other.assets/image-20240312103711940.png)"
  },
  {
    "text": "## Excel读取操作(基于COM)\n### Excel读取范围\n1. 新建组件“Excel读写操作Demo”，并添加“活动范围”、“Excel应用程序范围”两个命令，在“Excel应用程序范围”填写Excel文档的路径，如图：\n   ![image-20220509161530740](COMread.assets/image-20220509161530740.png)\n   Excel内容如下：\n   ![image-20220509161604829](COMread.assets/image-20220509161604829.png)\n2. 拖入“读取范围”命令，并为输出数据表创建一个变量“Table”。\n   常用属性介绍:\n   范围: 需要读取的范围，格式（如’A1:E10’）;如果未设值，将会读取整个表格; 如果将范围指定为某个单元格(如：’A2’)，则读取从该单元格开始的整个表格。 \n   添加标头：如果选中，将获取指定表格范围的标题。\n   ![image-20220509161706752](COMread.assets/image-20220509161706752.png)\n3. 打印数据查看：添加“输出数据表”命令，选择输入为上一步产生的“Table”，并为输出创建一个变量“str_tmp”，然后用“日志消息”命令打印出str_tmp。\n   ![image-20220509161808089](COMread.assets/image-20220509161808089.png)\n   ![image-20220509161819211](COMread.assets/image-20220509161819211.png)\n4. 执行结果：\n   ![image-20220509161840006](COMread.assets/image-20220509161840006.png)\n### Excel遍历内容\n在完成读取范围的基础上，遍历Excel表格数据，实际上是对“Table”的数据进行遍历。\n1. 添加命令“对于每一行”，并设置输入Table。\n   ![image-20220509161925011](COMread.assets/image-20220509161925011.png)\n   为输出Row创建遍历“Row”。\n   ![image-20220509161940839](COMread.assets/image-20220509161940839.png)\n   ![image-20220509161953199](COMread.assets/image-20220509161953199.png)\n   ![image-20220509162006704](COMread.assets/image-20220509162006704.png)\n2. 添加“获取行项目”命令，并设置输入输出参数，如图：\n   ![image-20220509162033560](COMread.assets/image-20220509162033560.png)\n3. 添加“日志消息”命令，输出取到的值（str_tmp）。\n   ![image-20220509162047912](COMread.assets/image-20220509162047912.png)\n   运行结果：\n   ![image-20220509162104275](COMread.assets/image-20220509162104275.png)\n### Excel其他读取操作\n1. 读取列：输入工作表名和起始单元格，返回整列数据，类型为List。\n   ![image-20220509162154071](COMread.assets/image-20220509162154071.png)\n2. 读取单元格：输入工作表名和单元格，返回单元格的内容。\n   ![image-20220509162204207](COMread.assets/image-20220509162204207.png)\n3. 读取单元格公式：输入工作表名和单元格，返回单元格公式。\n   ![image-20220509162214384](COMread.assets/image-20220509162214384.png)\n4. 读取行：输入工作表名和起始单元格，对应整行内容，类型为List。\n   ![image-20220509162226544](COMread.assets/image-20220509162226544.png)"
  },
  {
    "text": "# Excel自动化\n## Excel自动化基本介绍\nExcel自动化主要用于帮助各种类型的企业用户实现Excel数据处理自动化。Excel自动化是可以从单元格、列、行或范围中读取数据，向其他电子表格或工作簿写入数据等活动。通过相关命令，还可以对数据进行排序、进行格式设定或附加其他信息。即使用户的计算机上没有安装Excel,也可以执行部分组件，但更多的数据处理等活动还是需要在安装了应用程序的机器上才能运行。Excel自动化操作的所有活动原则上必须在Excel 应用程序范围内才能工作，CSV操作除外。\nRPA操作Excel的两组方法：\n1.  基于COM接口：应用程序集成 >  Excel 。\n   ![image-20220509161404157](Excel.assets/image-20220509161404157.png)\n2. 基于文件读写：系统 > 文件 >  Workbook。\n   ![image-20220509161415280](Excel.assets/image-20220509161415280.png)\n &emsp;&emsp;使用上的差异:\n| 对比项            | 基于COM                                                      | 基于文件读写                         |\n| ----------------- | ------------------------------------------------------------ | ------------------------------------ |\n| 需要安装Excel     | 需要，支持Microsoft Excel和WPS                               | 不需要                               |\n| 需要打开Excel进程 | 需要                                                         | 不需要                               |\n| 处理效率          | 需要打开Excel，数据量大时加载相对慢                          | 效率更快                             |\n| 功能性对比        | 功能更齐全、强大。支持一般读写、格式设置、复杂公式、插件增强公式…… | 支持一般读写、简单格式设置及简单公式 |"
  },
  {
    "text": "# 组件设计\n## 组件工具\n### 录制\n录制器是脚本向导工具的重要组成部分，其可以帮助人们在设置自动化业务流程时节省大量时间，此功能可以在屏幕上捕获用户的动作并将其转换为活动范围。\n支持的浏览器类型有 IE、Edge、Chrome、Firefox、360 以及金智维自研的KRPA浏览器。值得注意的是，除 IE 和金智维浏览器不需要安装插件外，其他浏览器都需要安装对应插件才可以正常录制。浏览器对应插件的安装方法，可以查看[《支持工具部署手册》](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/index.html?id=F0944F2961EC4D2C8652AE6D41645BE8&hex=7b2275736572223a2276697369746f72222c22656473223a226331656638323763303034653861393338373534313836623539346139663863222c226465734b6579223a224630304632384146222c22646f634964223a224630393434463239363145433444324338363532414536443431363435424538222c22697341646d696e223a66616c73657d)。\n#### 功能说明\n单击【录制】按钮，可显示录制器面板，该面板可分为：连续录制、单步录制和结束录制三部分。\n![image-20230609164938418](transcribe.assets/image-20230609164938418.png)\n##### ① 结束录制模块\n结束当前录制，并把录制结果自动生成脚本。\n##### ② 连续录制模块\n连续性地录制用户在界面上地操作，自动生成活动范围。其中，录制可分为RPA、前台以及智能推荐三种录制方式。\n- RPA：RPA后台录制操作。\n- 前台：前台操作，会记录鼠标移动、单击等各种操作，\n- 智能推荐：可智能选择或搜索需要的操作动作。\n  ![image-20230801100151368](transcribe.assets/image-20230801100151368.png)\n##### ③ 单步录制模块\n指录制用户在界面的单步操作，其中用户的单步操作包括：鼠标操作、键盘操作、复制文本操作、界面元素操作、结合文字识别界面操作以及结合图像识别操作。\n[应用程序操作](#应用程序操作)\n[鼠标操作](#鼠标操作)\n[键盘录制](#键盘录制)\n[复制文本操作](#复制文本操作)\n[界面元素操作](#界面元素操作)\n[结合文字识别操作](#结合文字识别操作)\n[结合图像识别操作](#结合图像识别操作)\n[手机操作](#手机操作)\n- ###### 应用程序操作：\n  ![image-20230609170009230](transcribe.assets/image-20230609170009230.png)\n  **示例：如打开且关闭“Chrome.exe”应用程序，打开百度界面，关闭百度界面选项卡。**\n  1. 手动打开谷歌浏览器，单击【录制】按钮，弹出的录制选项界面；\n     ![image-20230712154652067](transcribe.assets/image-20230712154652067.png)\n  2. 在弹出的录制选项界面，单击【应用程序】，下拉栏中选择【启用应用程序】，在所打开的谷歌浏览器的空白处单击，即可自动获取当前程序的路径，单击【确定】，实现打开谷歌浏览器的动作；\n     ![image-20230712154945469](transcribe.assets/image-20230712154945469.png)\n     ![image-20230712155028753](transcribe.assets/image-20230712155028753.png)\n  3. 在弹出的录制界面，单击【应用程序】-【关闭应用程序】，选中并单击谷歌浏览器的关闭按钮，此时即可完成实现关闭谷歌浏览器的动作；\n     ![image-20230712155259430](transcribe.assets/image-20230712155259430.png)\n  4. 打开百度界面，单击【应用程序】-【打开浏览器】，在百度界面任意地方单击，会弹出一个URL弹框，此时会自动生成百度界面的网址，单击【确认】即可实现打开百度界面操作；\n     ![image-20230712161141841](transcribe.assets/image-20230712161141841.png)\n     ![image-20230712161309573](transcribe.assets/image-20230712161309573.png)\n  5. 单击【应用程序】-【关闭选项卡】，选中并单击百度界面的关闭按钮，即可实现关闭百度界面操作；\n     ![image-20230712161445736](transcribe.assets/image-20230712161445736.png)\n  6. 单击【保存并退出】按钮，即可在组件编辑界面生成相关的操作组件；\n     ![image-20230712161531801](transcribe.assets/image-20230712161531801.png)\n     ![image-20230712161551905](transcribe.assets/image-20230712161551905.png)\n- ###### 鼠标操作：\n  ![image-20230609165617336](transcribe.assets/image-20230609165617336.png)\n  **示例：选择展示指定的系统信息。**\n  1. 在录制界面，单击【单击】-【单击】，指明需要单击的元素；\n     ![image-20240311154136636](transcribe.assets/image-20240311154136636.png)\n  2. 通过单击下拉箭头，在展开的下拉选项框中，通过单击【选择项目】，指明需要选择的元素；\n     ![image-20240311154303402](transcribe.assets/image-20240311154303402.png)\n     > **[info] 提示**\n   >\n     >  &emsp;在通过【选择项目】选择指定选项时，可先按F2延迟选择，再手动单击下拉箭头展开下拉选项，最后在出现红色框框时再进行元素的指明。\n  5. 单击【保存并退出】按钮，会在组件编辑界面生成相应的操作组件；\n     ![image-20240311161102669](transcribe.assets/image-20240311161102669.png)\n- ###### 键盘录制：\n  ![image-20230609165702336](transcribe.assets/image-20230609165702336.png)\n  **示例：在记事本输入内容，并通过发送热键方式选中全部内容。**\n  1. 打开一个记事本，在录制界面，单击【键入】-【输入信息】，在记事本空白处单击，此时会弹出一个弹框，在弹出的编辑框中写入需要输入的内容，单击【确定】即可完成输入操作；\n     ![image-20230712164729387](transcribe.assets/image-20230712164729387.png)\n     ![image-20230712164912866](transcribe.assets/image-20230712164912866.png)\n     ![image-20230712165019178](transcribe.assets/image-20230712165019178.png)\n  2. 在录制界面，单击【键入】-【发送热键】，此时会出现一个红框，选中记事本单击，会弹出“热键”弹框，在该弹框中，可自定搭配热键操作。如全选的快捷方式为“Ctrl+A”，则需勾选“Ctrl”，然后在输入框中输入a（大小写不区分）；\n     ![image-20230712165413219](transcribe.assets/image-20230712165413219.png)\n     ![image-20230712165111548](transcribe.assets/image-20230712165111548.png)\n     ![image-20230712165539281](transcribe.assets/image-20230712165539281.png)\n  3. 单击【确定】后，将会选中记事本中所有内容；\n     ![ ](transcribe.assets/image-20230712165619115.png)\n  4. 录制完成后，单击【保存并退出】，在组件编辑界面将会生成对应的组件。\n     ![image-20230712165657551](transcribe.assets/image-20230712165657551.png)\n- ###### 复制文本操作\n  ![image-20230609165727186](transcribe.assets/image-20230609165727186.png)\n  - 【复制文本】：即为【获取文本】函数的功能。\n  - 【屏幕抓取】：当抓取方法选择“原生”时，则是使用【获取全文本】函数进行抓取；当抓取方法选择“OCR”时，则是使用【获取OCR文本】函数进行抓取。\n  **示例：抓取记事本的内容**。\n  1. 打开待抓取内容的记事本，在录制界面，单击【复制】-【复制文本】，指明要抓取的内容；\n     ![image-20230713100649018](transcribe.assets/image-20230713100649018.png)\n  2. 在录制界面，单击【复制】-【屏幕抓取】，在记事本中指明需要抓取的内容，此时会弹出一个“屏幕抓取器”弹框，在该弹框中可选择“原生”或“OCR”的抓取方法，选择完成后，单击【确定】，即可实现屏幕录制操作；\n     ![image-20230713103118870](transcribe.assets/image-20230713103118870.png)\n     ![image-20230713100825949](transcribe.assets/image-20230713100825949.png)\n- ###### 界面元素操作\n  界面元素的操作，对应的是元素分组下的函数。\n  ![image-20230609165750286](transcribe.assets/image-20230609165750286.png)\n- ###### 结合文字识别操作\n  文字识别操作，对应的是文本分组下的函数。\n  ![image-20230609165811229](transcribe.assets/image-20230609165811229.png)\n- ###### 结合图像识别操作\n  图像识别操作，对应的是图像分组下的函数。\n  ![image-20230609165850997](transcribe.assets/image-20230609165850997.png)\n- ###### 手机操作\n  手机操作，对应的时手机操作分组下的函数。\n  ![image-20230609165920895](transcribe.assets/image-20230609165920895.png)"
  },
  {
    "text": "### 数据抓取\n数据抓取实际为【提取结构化数据】函数的协作工具，主要是从具有规则的表格、表单或者列表中提取数据，如table 、 ul 、ol 以及其他具有规则的 div、span 等数据。\n#### 功能说明\n当用户需要对具有规则的表单、表格或者列表进行操作时，可通过数据抓取工具进行数据的获取，数据抓取的方式有下面两种：\n- 通过添加“提取结构化数据”函数，在该函数属性面板的“提取元数据”字段中提供XML字符串，以此指定提取的信息；\n- 通过使用组件编辑面板中的【数据抓取】按钮，直接指明抓取的信息，从而自动生成相关函数以及函数所相关的属性。\n#### 场景示例\n当前示例以抓取浏览器中表单的数据为例，具体使用请参考以下两个示例：\n[场景示例一](#场景示例一)\n[场景示例二](#场景示例二)\n##### 场景示例一\n通过【数据抓取】按钮进行数据抓取。\n1. 在浏览器中打开所需抓取数据的网页表格，如图所示：\n   ![image-20230609141452656](data_crawling.assets/image-20230609141452656.png)\n2. 在组件编辑面板中，单击【数据抓取】按钮，此时会弹出一个“提取向导”的窗口，然后按照窗口提示的步骤进行操作。\n   ![image-20230609141826491](data_crawling.assets/image-20230609141826491.png)\n3. 在“提取向导”窗口中，单击下一步后，将鼠标光标悬停在数据源字段上方（红框选中我们所需选择的字段即可），单击该字段。此时将会有个提示“您已选择了一个表格单元，是否从整个表格中提取数据”，单击【是】。\n   ![image-20230609142023031](data_crawling.assets/image-20230609142023031.png)\n4. 完成步骤3后，页面将切换至控制台，此时在“提取向导”窗口中会加载到所提取到的表格的数据，可在该处设置数据的最大显示条数（默认最大结果条数为100；0表示不限制，此时会提取表格中的所有数据）。\n   ![image-20230609142313623](data_crawling.assets/image-20230609142313623.png)\n5. 单击【完成】按钮，会有相应的提示操作。\n   ![image-20230609142706043](data_crawling.assets/image-20230609142706043.png)\n   - 单击【是】，则表明将要抓取跨多个页面的数据，此时可根据提示框中的步骤进行操作。\n   - 单击【否】，则表明只抓取当前页面的数据。\n6. 操作完成上述步骤后，将会在组件编辑面板中，生成一个“提取结构化数据”的函数。\n   ![image-20230609142856011](data_crawling.assets/image-20230609142856011.png)\n7. 在所生成的“提取结构化数据”函数中，创建数据表的输出变量，将输出结果赋给变量Table。\n   ![image-20230609143719183](data_crawling.assets/image-20230609143719183.png)\n8. 此时我们可添加相应的其他辅助函数，将我们所抓取到的数据直接输出或写入文件中。\n   - 结果直接输出的操作方式：\n     1. 添加“输出数据表”函数，数据表属性选择Table变量，并创建文本的输出变量text。\n        ![image-20230609144353232](data_crawling.assets/image-20230609144353232.png)\n     2. 添加“日志消息”函数，设置如下：\n        ![image-20230609144502355](data_crawling.assets/image-20230609144502355.png)\n     3. 执行结果如下所示：\n        ![image-20230609160034692](data_crawling.assets/image-20230609160034692.png)\n   - 结果写入文件的操作方式：\n     1. 添加“Excel应用程序范围”函数，填入需要存放的工作簿的路径，如下图所示：\n        ![image-20230609161801217](data_crawling.assets/image-20230609161801217.png)\n     2. 添加“写入范围”函数，设置效果如下图所示：\n        ![image-20230609162130719](data_crawling.assets/image-20230609162130719.png)\n     3. 执行结果如下：\n        ![image-20230609162151605](data_crawling.assets/image-20230609162151605.png)\n##### 场景示例二\n通过“提取结构化数据”函数进行数据抓取。\n1. 在组件编辑面板中，添加“提取结构化数据”函数，通过指明元素指明需要抓取的表格数据字段，指明完成后，选取器属性栏会自动生成相关内容，此时创建输出变量Table即可。\n   ![image-20230609162644862](data_crawling.assets/image-20230609162644862.png)\n2. 接下来的操作，与场景示例一一样，具体可从[场景示例一](#步骤7)的步骤7开始进行参考。"
  },
  {
    "text": "### 全局参数\n【全局参数】界面提供统一配置参数的入口，用户可在此处进行全局参数的维护与管理。组件可通过使用相关函数进行调用；流程可在进行参数配置的时候选择全局参数。\n比如有10台机器上有 KCXP 程序，且安装路径一致，此时可以设置一个 KCXP 程序路径的全局参数，配制流程选择程序路径时，只需引用此参数即可。\n#### 全局参数创建\n全局参数的创建，可在【全局参数】界面进行创建，也可在组件中通过使用相关函数进行创建。具体如下：\n（一）在【全局参数】界面创建：\n1. 进入【全局参数】界面：\n   在左边树栏单击“脚本管理”，在界面中选择并单击“全局参数”，进入全局参数界面；\n   ![image-20240307154440093](GlobalPara.assets/image-20240307154440093.png)\n2. 创建全局参数：\n   在【全局参数】界面，单击“增加”-“增加参数”。\n   ![image-20240307172052600](GlobalPara.assets/image-20240307172052600.png)\n   ![image-20240307172139253](GlobalPara.assets/image-20240307172139253.png)\n（二）通过使用相关函数进行创建：\n1. 通过使用【设置全局参数】函数，创建全局参数：\n   在组件编辑界面，添加【设置全局参数】函数；\n   ![image-20240307172355449](GlobalPara.assets/image-20240307172355449.png)\n2. 编辑【设置全局参数】函数：\n   ![image-20240307174948227](GlobalPara.assets/image-20240307174948227.png)\n3. 执行函数，则全局参数设置完成。\n   ![image-20240307175051975](GlobalPara.assets/image-20240307175051975.png)\n#### 全局参数使用\n用户可通过在组件中调用【获取全局参数】函数或在流程中调用全局参数，从而进行参数、组件、流程之间的交互。\n（一）通过函数获取全局参数的值：\n1. 通过使用【获取全局参数】函数，创建全局参数：\n   ![image-20240308092417800](GlobalPara.assets/image-20240308092417800.png)\n2. 编辑【获取全局参数】函数：\n   ![image-20240308092821296](GlobalPara.assets/image-20240308092821296.png)\n3. 执行函数，将会获取指定全局参数的值。\n   ![image-20240308093137707](GlobalPara.assets/image-20240308093137707.png)\n   ![image-20240308093200094](GlobalPara.assets/image-20240308093200094.png)\n（二）通过流程调用流程参数：\n​\t\t\t示例：将指定全局参数值写入excel单元格中。\n1. 在组件中调用【Excel应用程序范围】、【写入单元格】函数；\n   ![image-20240308100419495](GlobalPara.assets/image-20240308100419495.png)\n2. 在【Excel应用程序范围】函数的“工作簿路径”传入excel文件路径；\n   ![image-20240308100601424](GlobalPara.assets/image-20240308100601424.png)\n3. 创建一个名为“gitbook”的输入参数，并将该变量传入到【写入单元格】函数的“值”属性处，写编辑写入“范围”和“工作表名称”；\n   ![image-20240308100806791](GlobalPara.assets/image-20240308100806791.png)\n4. 在流程设计中，调用该组件，且参数选择时，选择需要传入的全局参数；\n   ![image-20240308100938497](GlobalPara.assets/image-20240308100938497.png)\n5. 执行流程，查看执行结果：成功将所选择的全局参数的值写入到excel文件指定单元格中。\n   ![image-20240308101052189](GlobalPara.assets/image-20240308101052189.png)"
  },
  {
    "text": "### 组件变量\n变量是组件内部的脚本语句之间传递数据的载体，本系统中变量是区分数据类型的，脚本可以引用变量的值，以及给变量赋值。\n#### 创建变量\n1. 从上下文菜单中选择创建。\n   在脚本函数的属性面板中，单击编辑框后右键，可从上下文菜单中选择“创建变量”，然后在弹出框中输入变量名称。变量类型会根据属性框中所需要的类型自动定义。\n   ![1699609547284](Variable.assets/1699609547284.png)\n2. 变量面板中创建。\n   若组件编辑界面下方未显示变量面板，则可单击下图的“变量”，展开变量面板：\n   ![1699609004216](Variable.assets/1699609004216.png)\n   在展开的变量面板中，单击并按 F2 可进入编辑状态，可新建或者修改变量，其中通过【定位】按钮，也可定位到所引用该变量的函数。\n   > **[info] 提示**\n   >\n   > - 选中变量名称按 F2 修改名称后，再单击其后方的“修改”按钮，可将修改后的变量名称同步到引用该变量的函数里。\n   > - 变量支持的类型可通过单击“变量类型”列后按 F2 进行下拉选择，此处建立的变量被组件引用时，需保证变量类型与属性类型一致。\n   ![1699609334874](Variable.assets/1699609334874.png)\n#### 使用变量\n变量的使用，可直接输入变量名称，或通过“显示智能提示”方式进行选择。\n1. 直接输入关键字名称（无需带引号）\n   ![1699609758070](Variable.assets/1699609758070.png)\n2. 单击编辑框后右键，通过“显示智能提示”方式进行选择。\n   ![1699609937088](Variable.assets/1699609937088.png)\n   ![1699610027082](Variable.assets/1699610027082.png)"
  },
  {
    "text": "### 工具栏\n在组件编辑面板中，工具栏的出现为用户进行脚本向导组件编写提供了更多的协作功能，如插件的自动安装、脚本的断点调试等，【工具】按钮功能菜单如下图所示：\n![image-20240824142811885](toolbar.assets/image-20240824142811885.png)\n- 中文脚本：将脚本向导组件切换成中文脚本类型组件，切换成功后需要重新打开。\n  > **[warning]  注意**\n  >\n  > &emsp;切换时不会将当前代码自动转换成中文脚本代码。\n- 插件安装：有些函数的使用需要依赖相应的插件，在此处可以自动安装指定插件。插件列表如下所示：\n  | 名称         | 用途                                                         | 插件安装                                                     |\n  | ------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n  | 图像插件     | 在使用OpenCV函数时需要用到该插件，用户进行图片的查找。       | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Image.html) |\n  | 文字插件     | 在使用“获取窗口内容”函数时需要用到该插件，使用前需要先激活窗口。应用场景：非标准窗口获取不到内容时，需要安装该插件来获取内容。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Word.html) |\n  | Java插件     | 该插件主要用于Java类客户端程序元素的抓取，成功安装插件后，在脚本向导编辑界面使用向导函数时，可以用“指明屏幕上”抓取Java类客户端程序元素。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Java1.html) |\n  | pdf插件      | 该插件主要用于pdf相关函数的使用。                            | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Pdf.html) |\n  | Firefox插件  | Firefox插件的安装，即安装火狐浏览器插件、配置扩展程序，这样才能使用自动化系统的函数去操作火狐浏览器，且脚本向导录制时可抓取到火狐浏览器的单个元素。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/FirefoxNew.html) |\n  | chrome插件   | V2版本插件，即安装谷歌浏览器插件，配置扩展程序，这样才能使用自动化系统的函数去操作谷歌浏览器（目前仅支持开发版本的谷歌浏览器），且脚本向导录制时可以抓取到谷歌浏览器的单个元素。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Chrome.html) |\n  | chromeV3插件 | 升级版的谷歌插件，一般在谷歌版本为120之后才需使用该插件，建议使用chrome插件。安装谷歌浏览器插件，配置扩展程序，这样才能使用自动化系统的函数去操作谷歌浏览器，且脚本向导录制可以抓取到谷歌浏览器的元素。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/ChromeV3.html) |\n  | Edge插件     | Edge插件的安装，即安装Edge浏览器插件、配置扩展程序，这样才能使用自动化系统的函数去操作谷歌浏览器，且脚本向导录制时可以抓取到Edge浏览器的单个元素。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Edge.html) |\n  | 360插件      | 360插件的安装，即安装360浏览器插件、配置扩展程序，这样才能使用自动化系统的函数去操作360浏览器，且脚本向导录制时可抓取到360浏览器的单个元素。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/360.html) |\n  | SSLLibrary   | SSLLibrary插件安装，主要用于进行AI识别函数及http/https相关函数的使用。当使用AI函数时，访问的类型参数选择的是代理端时，需要运用到此插件；若是访问类型选的是服务器端时，需要把这两个Dll文件拷贝到服务器目录下。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/SSLLibrary.html) |\n  | TesseractOCR | TesseractOCR插件主要用于需要进行OCR识别的相关函数，如：文字识别图片和文字识别文件函数，对发票、证件等票据的识别，都是需要运用到此插件。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/TesseractOCR.html) |\n  | 邮件插件     | 邮件插件主要应用于脚本向导函数“获取IMAP邮件消息”，当参数“连接方式”选择Chilkat时，需要安装邮件插件。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Email.html) |\n  | .net插件     | 当使用“CSharp”分组下的函数时，需要安装此插件才能抓取到“.net”类型的窗口元素。 | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Net.html) |\n  | Excel插件    | 安装Excel插件，可对脚本向导对应的Excel函数进行操作。    | [安装教程](http://doc.kingsware.cn:8096/public/Uploads/Doc/D04D0AF3E2674A8692DE2D31E543A0DF/%E6%94%AF%E6%8C%81%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E/Excel.html) |\n- 插件检查：插件检查包含谷歌占用检查、火狐占用检查以及插件文件检查三种。可检查谷歌或火狐插件是否有占用异常、检查指定的插件是否已安装。\n  插件文件检查：\n  ![image-20230609095512044](toolbar.assets/image-20230609095512044.png)\n- 导出：导出当前组件，可按照个人所需的格式导出该组件，支持导出的格式有：“.kws”后缀的文件、十六进制、Json格式以及可视化组件（“.vis”后缀文件）。\n- 导入：该【导入】按钮中所导入的组件格式，与【导出】按钮中所导出的组件一一对应。\n- 导出步骤：导出当前组件的操作步骤，并且将该组件执行中每一步的执行结果都截图保存，导出的文件为“.docx”格式。\n- 删除未引用变量：删除当前组件中多余的、未引用的变量。\n- 显示函数：在组件编辑面板左侧树栏中，显示中文函数。即若想在脚本向导组件中调用中文函数，则可勾选上“显示函数”，在左边树栏中选择需要调用的中文函数。\n- 显示截图：该功能仅针对有“指明在屏幕上”功能的函数，当通过“指明在屏幕上”指明指定的元素或者界面的某些信息时，将会显示所指明的区域的截图，否则将不显示。\n  > **[warning] 注意**\n  >\n  > &emsp;在2024.08.14版本及之后新增“显示完整”，默认勾选“显示部分”。&emsp;① 显示部分：即显示指明屏幕部分截图&emsp;② 显示完整：即显示指明屏幕区域完整截图，可使用鼠标滚轮放大缩小查看完整截图\n  勾选“显示部分”：\n  ![image-20240824151017307](toolbar.assets/image-20240824151017307.png)\n  ![image-20240824151113020](toolbar.assets/image-20240824151113020.png)\n  勾选“显示完整”：\n  ![image-20240824151317298](toolbar.assets/image-20240824151317298.png)\n  ![image-20240824151431261](toolbar.assets/image-20240824151431261.png)\n  不勾选“显示截图选项”：指明屏幕截图区域不显示\n  ![image-20240824151852905](toolbar.assets/image-20240824151852905.png)\n  ![image-20240824151944263](toolbar.assets/image-20240824151944263.png)\n- 执行进度：勾选“执行进度”，则将会详细输出当前组件每一步执行进度的信息。\n- 断点管理：勾选了“断点管理”，在组件编辑面板的下方增加了个“调试”栏，后续在某个函数中设置了断点，都将会在该“调试”栏中显示，且可对所设置的断点进行启用、禁用以及删除的操作。\n  ![image-20230609102116949](toolbar.assets/image-20230609102116949.png)\n- 自动保存：启动自动保存功能后，若在组件编辑过程中出现突发情况导致控制台被关闭，再次登录进控制台打开该组件时，会弹出提示框是否导入本地新组件，单击确定后，可恢复原本所编辑的组件。\n- 富文本模式：勾选“富文本模式”后，在执行组件时，将会输出当前组件的富文本模式内容，如：执行时间、组件名称、组件中函数的变量名称、变量值等内容。当前仅支持字符串、整型、布尔类型的输出。\n  ![image-20230609103148492](toolbar.assets/image-20230609103148492.png)\n- 自动编译：勾选“自动编译”，设置开始编译的时间（必须大于或等于30S），到所设置的时间后，将会自动编译当前组件。\n- 附加模式：此功能主要应用于【附加窗口】/【附加浏览器】函数，以便在窗口/浏览器元素发生改变时，用户可快速更新【附加窗口】/【附加浏览器】下所有函数的“选取器”内容。勾选“附加模式”后，用户只需修改【附加窗口】/【附加浏览器】函数的“选取器”内容，即可同步更新其下所有函数的“选取器”内容；不勾选则不会自动更新其下函数的“选取器”内容。\n- 实时帮助：该功能支持实时查看函数/组件帮助信息，默认不勾选，勾选后，向导脚本中添加向导函数/中文函数/向导自定义组件/向导自定义组件后，单击其所在行，即可实时查看帮助信息。\n  > **[warning] 注意**\n  >\n  > &emsp;”控制“分组下函数不支持实时帮助功能。\n  ![image-20240530145453278](toolbar.assets/image-20240530145453278.png)\n​"
  },
  {
    "text": "### 流程参数\n脚本向导编辑界面新增了“流程参数”面板，此处可以对引用当前组件的流程进行流程参数的设置与获取。\n- 根据参数类型，可分为 “String” 和 “File” ，即设置/获取流程的 “String” 和 “File” 类型参数；\n- 根据流程类型，可分为“流程”和“节点”，即设置/获取“流程”参数或者流程的“节点”参数\n- 根据状态类型，可分为“设计时”和“运行时”，即设置/获取流程“设计时”或者“运行时”状态参数\n- 根据参数传递方向，可分为“输入”和“输出”。\n  - 输入：类似于在组件中使用“获取流程参数”和“获取流程参数文件”函数，可以获取流程设计状态或者运行状态下的参数值。\n  - 输出：类似于在组件中使用“设置流程参数”或者“设置流程结果文件”，可以设置流程设计状态或者运行状态下的参数值。\n#### 创建流程参数\n在流程参数面板中创建，若组件编辑界面下方未显示流程参数面板，则可单击下图的“流程参数”，展开流程参数面板：\n![1701250039964](FlowPara.assets/1701250039964.png)\n在展开的流程参数面板中，单击 F2 可进入编辑状态，可新建流程参数。\n> **[info] 提示**\n>\n> &emsp;流程参数支持的方向、参数类型、流程类型和状态类型，可通过单击对应列后按 F2 进行下拉选择，此处建立的流程参数名称需保证与调用该组件的流程的参数名称一致。\n![1701250419189](FlowPara.assets/1701250419189.png)\n####  使用与传递流程参数\n- 字符串类型\n  1. 新建向导组件，并编辑和审核组件\n     打开【组件管理】界面，新增一个名为“流程参数测试”的脚本向导组件，打开后切换到“流程参数”面板中新建 一个名为“参数1”的输入参数和一个名为“参数2”的输出参数，同时在在脚本编辑界面添加两行【日志消息】函数，分别打印“参数1”和“参数2”。\n     > **[info] 提示**\n     >\n     > &emsp;“参数1”为输入参数，无需设置默认值；“参数2”为输出参数，需设置默认值。\n     ![1701260571994](FlowPara.assets/1701260571994.png)\n     编辑并调试完成后，保存和审核组件。\n     ![1701260811253](FlowPara.assets/1701260811253.png)\n  2. 新建流程，并调用“流程参数测试”组件\n     打开【流程设计】界面，新建一个名为“流程参数流程”的流程，并调用“流程参数测试”组件。\n     ![1701261050868](FlowPara.assets/1701261050868.png)\n     流程中设置与“流程参数测试”组件中“流程参数”面板同名同类型的流程参数，其中“参数1”赋予相应的参数值。\n     > **[info] 提示**\n     >\n     > &emsp;“参数1”设置参数值；“参数2”无需设置值。\n     ![1701262731614](FlowPara.assets/1701262731614.png)\n  3. 保存并执行该流程，可查看到流程日志中已打印“参数1”和“参数2”的值\n     > **[info] 说明**\n     >\n     > - 第一行日志打印的是“参数1”的值，可以发现该值来源于【流程设计】界面中“参数1”设置的值，即【流程设计】界面中“参数1”设置的值传入到了组件的“参数1”中。\n     > - 第二行日志打印的是“参数2”的值，可以发现该值来源于组件的“参数2”中设置的默认值，即组件的“参数2”中设置的默认值传入到了【流程设计】界面的“参数2”中。\n     ![1701263447359](FlowPara.assets/1701263447359.png)\n     ![1701262902652](FlowPara.assets/1701262902652.png)\n  4. 综上可知，“字符串”类型流程参数“：组件中**输入流程参数**可以获取到流程的同名参数值，并将获取到的参数值在组件中传递使用；组件中**输出流程参数**设置的默认值可以传递给流程的同名参数里，并将设置的默认值在流程中传递使用。\n     > **[info] 说明**\n     >\n     > - 运行状态下的操作类似，不同在于设计状态下可以在界面查看，而运行状态下无法查看到界面。\n     > - 节点类型下的操作类似，不同在于若组件中流程参数为“流程”类型，则在流程中无需选中节点新建同名参数；若组件中流程参数为“节点”类型，则需在流程中选中调用该组件的节点后，再新建流程节点的同名参数。\n- 文件类型\n  1. 新建向导组件，并编辑和审核组件\n     打开【组件管理】界面，新增一个名为“流程参数test”的脚本向导组件，打开后切换到“流程参数”面板中新建 一个名为“文件参数1”的输入参数和一个名为“文件参数2”的输出参数，同时在在脚本编辑界面添加两行【日志消息】函数，分别打印“文件参数1”和“文件参数2”。\n     > **[info] 提示**\n   >\n     > &emsp;由于“文件参数1”和“文件参数2”都为“文件”类型流程参数，因此都需要设置默认值，即需要设置两个默认文件路径，下面为设置的两个默认文件 “D:\\1.txt” 和 “D:\\1.txt” 的内容。\n   >\n     > ![1701328569440](FlowPara.assets/1701328569440.png)\n     ![1701328118260](FlowPara.assets/1701328118260.png)\n     编辑并调试完成后，保存和审核组件。\n     ![1701328263012](FlowPara.assets/1701328263012.png)\n  2. 新建流程，并调用“流程参数test”组件\n     打开【流程设计】界面，新建一个名为“流程参数test测试”的流程，并调用“流程参数test”组件。\n     ![1701314974061](FlowPara.assets/1701314974061.png)\n     流程中设置与“流程参数测试”组件中“流程参数”面板同名同类型的流程参数，并勾选“手动执行流程弹出参数设置”选项。\n     ![1701315021540](FlowPara.assets/1701315021540.png)\n  3. 保存并执行该流程\n     流程执行时，会弹出“运行配置”窗口，此时分别上传 “D:\\3.txt” 和 “D:\\4.txt” 两个文件。\n     > **[info] 提示**\n     >\n     > &emsp;由于“文件参数1”和“文件参数2”都为“文件”类型参数，因此都需要上传文件，下面为上传的两个文件 “D:\\3.txt” 和 “D:\\4.txt” 的内容。\n     >\n     > ![1701329115816](FlowPara.assets/1701329115816.png)\n     ![1701328891123](FlowPara.assets/1701328891123.png)\n  4. 查看流程日志\n     ① 第一行日志打印的是“文件参数1”的值，可以发现该值来源于【流程设计】界面中“文件参数1”上传的文件路径（“D:\\3.txt”），即【流程设计】界面中“文件参数1”上传的文件路径（“D:\\3.txt”）传入到了组件的“文件参数1”中。\n     ② 第二行日志打印的是“文件参数2”的值，可以发现该值来源于组件的“文件参数2”中设置的文件路径（“D:\\2.txt”），即组件的“文件参数2”中设置的文件路径（“D:\\2.txt”）传入到了【流程设计】界面的“文件参数2”中。\n     ![1701329165522](FlowPara.assets/1701329165522.png)\n  5. 查看参数\n     ① 流程执行过程中上传的 “D:\\3.txt” 和 “D:\\4.txt”文件可在执行后的“参数”-“文件”里下载；\n     ② 【流程设计】界面中“文件参数1”上传的文件（“D:\\3.txt”）内容覆盖了组件的“文件参数1”中设置的文件（“D:\\1.txt”）内容，可供组件使用，即【流程设计】界面中“文件参数1”上传的文件内容传入到了组件的“文件参数1”的文件中；\n     ![1701330644069](FlowPara.assets/1701330644069.png)\n     ③ 组件中“文件参数2”中设置的文件（“D:\\2.txt”）已传入到流程中，可在执行后的“参数”-“文件”里下载使用，即组件中“文件参数2”中设置的文件传递到流程中使用；\n     ![1701329591329](FlowPara.assets/1701329591329.png)\n  6. 综上可知，“文件”类型流程参数：组件中**输入流程参数**可以获取到流程同名参数中上传文件的内容，并将获取到的文件在组件中传递使用；组件中**输出流程参数**设置的文件可以上传到流程的同名参数中，并将设置的文件在流程中传递下载使用。\n     > **[info] 说明**\n     >\n     > - 运行状态下的操作类似，不同在于设计状态下可以在界面查看，而运行状态下无法查看到界面。\n     > - 节点类型下的操作类似，不同在于若组件中流程参数为“流程”类型，则在流程中无需选中节点新建同名参数；若组件中流程参数为“节点”类型，则需在流程中选中调用该组件的节点后，再新建流程节点的同名参数。"
  },
  {
    "text": "#### 场景示例\n脚本向导的录制操作中，可分为RPA、前台以及智能推荐三种录制方式。不同的录制方式，最终所生成的脚本组件示例不同，现在分别对这三种录制方式进行介绍，其中不同示例所采取的录制方式如下：\n示例一：[CS应用操作自动化](#cs应用操作自动化)，采取RPA录制方式；\n示例二：[BS网页操作自动化](#bs网页操作自动化)，采取智能推荐录制方式；\n示例三：[基于图像识别的UI自动化](#基于图像识别的ui自动化)。\n##### CS应用操作自动化\n此处以记事本操作为例进行介绍。\n示例：打开记事本，写入内容后保存退出。\n1. 打开记事本，单击【录制】按钮，弹出录制选项界面；\n   ![image-20230801092803364](sample_recording_scene.assets/image-20230801092803364.png)\n2. 在弹出的录制选项界面，单击【应用程序】，在下拉选项中选择”启动应用程序“，选中并单击步骤1中所打开的记事本的空白处，此时可自动获取到当前的程序路径，实现打开记事本的动作；\n   ![image-20230801093040709](sample_recording_scene.assets/image-20230801093040709.png)\n   ![image-20230801093120711](sample_recording_scene.assets/image-20230801093120711.png)\n3. 在录制选项界面中，单击【录制】-RPA，单击记事本编辑框，在弹出的窗口中，输入需要写入的内容（如：“金智维RPA”）单击【确定】；\n   ![image-20230801102150915](sample_recording_scene.assets/image-20230801102150915.png)\n   ![image-20230801102220214](sample_recording_scene.assets/image-20230801102220214.png)\n4. 单击记事本的关闭按钮，选择保存路径，录制完成后，按ESC键退出；\n   ![image-20230801102351514](sample_recording_scene.assets/image-20230801102351514.png)\n   ![image-20230801102522485](sample_recording_scene.assets/image-20230801102522485.png)\n5. 录制完成后，可通过单击【查看】按钮，查看录制步骤，在此处可对已录制的步骤进行删除操作，也可将录制步骤进行导出；\n   ![image-20230801102741490](sample_recording_scene.assets/image-20230801102741490.png)\n   导出的步骤将存放在“.docx”文件中，步骤将分为业务需求背景描述以及业务操作流程两个部分，其中业务操作流程的每一步都将附上操作的截图，效果如下：\n   ![image-20230801103202887](sample_recording_scene.assets/image-20230801103202887.png)\n6. 录制完成后，单击【保存并退出】，则将回到脚本编辑界面；\n   ![image-20230801103505887](sample_recording_scene.assets/image-20230801103505887.png)\n7. 若此时在向导的编辑界面，想查看中文函数，则可通过单击【工具】-【显示函数】；\n   ![image-20230801103725417](sample_recording_scene.assets/image-20230801103725417.png)\n   ![image-20230801103807291](sample_recording_scene.assets/image-20230801103807291-17102112002881.png)\n8. 若在向导编辑界面，对于“指明在屏幕上”的函数，可选择在函数右侧显示所指明的元素截图，也可选择将该截图进行隐藏，此时可通过【工具】-【显示截图】功能进行操控；\n   ![image-20230801104127706](sample_recording_scene.assets/image-20230801104127706.png)\n   勾选“显示截图”：\n   ![image-20230801104055959](sample_recording_scene.assets/image-20230801104055959.png)\n   取消勾选“显示截图”：\n   ![image-20230801104036493](sample_recording_scene.assets/image-20230801104036493.png)\n9. 待设置完成后，单击【运行】-【运行】脚本即可。\n##### BS网页操作自动化\n此处以谷歌浏览器为例进行介绍。\n示例：打开谷歌浏览器，输入指定内容进行搜索。\n1. 打开谷歌浏览器，进入需要操作的网页（如：百度网页），单击【录制】按钮；\n   ![image-20230801105415427](sample_recording_scene.assets/image-20230801105415427.png)\n2. 在录制选项界面，单击【应用程序】-【打开浏览器】，选中并单击步骤1中所打开的百度浏览器，此时可自动获取到当前网页的网址，实现打开浏览器的动作；\n   ![image-20230801105539154](sample_recording_scene.assets/image-20230801105539154.png)\n   ![image-20230801112119662](sample_recording_scene.assets/image-20230801112119662.png)\n3. 在录制选项界面中，单击【录制】-智能推荐，单击百度输入框，此时会出现智能选择框，在智能选择框中可搜索需要操作的动作；\n   ![image-20230801112334955](sample_recording_scene.assets/image-20230801112334955.png)\n   ![image-20230801112522846](sample_recording_scene.assets/image-20230801112522846.png)\n3. 在弹出的智能搜索框中，单击【输入信息】，此时会弹出一个输入信息弹框，在此处输入需要搜索的内容，单击【确定】按钮即可；\n   ![image-20230801112842220](sample_recording_scene.assets/image-20230801112842220.png)\n   ![image-20230801112927167](sample_recording_scene.assets/image-20230801112927167.png)\n3. 待输入搜素内容之后，可单击【百度一下】按钮进行搜索。此时需要选中【百度一下】按钮，在智能搜索框中，选择【单击】操作；\n   ![image-20230801113329864](sample_recording_scene.assets/image-20230801113329864.png)\n3. 选中需要操作的元素单击，在智能搜索框的搜索栏中，输入需要搜索的操作。如下图，单击搜索出来的“获取位置”，即可实现获取位置的操作；\n   ![image-20230801140613790](sample_recording_scene.assets/image-20230801140613790.png)\n3. 录制完毕后，按ESC键可退出操作，单击【保存并退出】，即可回答脚本编辑界面，此时执行脚本即可。\n   ![image-20230801140749279](sample_recording_scene.assets/image-20230801140749279.png)\n##### 基于图像识别的UI自动化\n示例：给微信好友发送文件。\n1. 单击【录制】按钮，弹出录制选项界面；\n   ![image-20230801142124567](sample_recording_scene.assets/image-20230801142124567.png)\n2. 打开微信界面，单击【图像】-【鼠标】-【单击】，鼠标左键框出搜索图像范围，之后选择完成截图，在弹出的提示框中单击【确定】；\n   ![image-20230801142637329](sample_recording_scene.assets/image-20230801142637329.png)\n   ![image-20230801142808112](sample_recording_scene.assets/image-20230801142808112.png)\n   ![image-20230801142910834](sample_recording_scene.assets/image-20230801142910834.png)\n3. 在录制选项界面，单击【键入】-【输入信息】，在搜索框中输入微信好友名称；\n   ![image-20240312104542946](sample_recording_scene.assets/image-20240312104542946.png)\n4. 单击【图像】-【鼠标】-【单击】，鼠标左键框出搜索到的好友头像范围，之后选择完成截图，在弹出的提示框中单击【确定】；\n5. 在聊天界面，单击【图像】-【鼠标】-【单击】，鼠标左键框出文件图标范围，之后选择完成截图，在弹出的提示框中单击【确定】；\n   ![image-20230801143524679](sample_recording_scene.assets/image-20230801143524679.png)\n6. 单击文件图标，在弹出的界面，单击【键入】-【输入信息】，设置文件的录制和名称，单击【单击】按钮，单击【打开】；\n   ![image-20230801143614989](sample_recording_scene.assets/image-20230801143614989.png)\n7. 在聊天界面，单击【图像】-【鼠标】-【单击】，鼠标左键框出发送文件图标范围，之后选择完成截图，在弹出的提示框中单击【确定】；\n   ![image-20230801143715449](sample_recording_scene.assets/image-20230801143715449.png)\n8. 录制完成后，按ESC键退出录制界面，单击【保存并退出】按钮，即可退出录制界面；\n   ![image-20230801143809606](sample_recording_scene.assets/image-20230801143809606.png)\n9. 录制完成后，可执行组件。"
  },
  {
    "text": "### 用户界面探测器\n“用户界面探测器”界面，展示的是当前系统中打开的所有程序的元素信息。\n#### 功能说明\n当用户无法直接指明元素时，可手动展开“用户界面探测器”界面获取的所有程序元素信息，当在界面中查看到目标元素时，即可将该元素的表达式直接复制到脚本向导函数“选取器”属性的表达式栏。\n> **[warning] 注意**\n>\n> &emsp;若用户通过该探测器获取到元素信息后无法验证成功，则可适当对该元素信息进行删减操作，直到验证成功为止（一般仅会在获取到的元素表达式信息的中间行进行删减操作）。\n界面如下所示：\n![image-20230721160936045](Module.assets/image-20230721160936045.png)\n- 界面左上角的![1689930623443](Module.assets/1689930623443.jpg)按钮，可筛选用户界面框架，界面展示的元素是根据所选择的界面框架进行展示。\n- 指出元素：可通过【指出元素】操作，指明元素。\n- 验证：当选中元素后，可通过单击【验证】按钮，查看是否验证通过，若验证通过，则表明元素存在；若验证不通过，则表明元素不存在。\n- 高亮显示：当指明元素时，可通过“高亮显示”，用红框框住所指明的元素。\n- 显示隐藏窗口：当勾选“显示隐藏窗口”，则对于系统中隐藏的窗口都将会在该界面进行显示。\n- 刷新：刷新当前界面，当切换了用户界面框架时，需要对界面进行刷新。\n当在界面中选中所需要的元素，则在界面左下角及右侧的对应区域会显示出元素详情信息；\n![image-20230724104220935](Module.assets/image-20230724104220935.png)\n界面右下角所显示的元素表达式，是根据右上角区域所勾选的字段来生成的，如：当取消勾选界面中的“role”字段，则在表达式中将会无“role”字段生成。\n未取消勾选“role”字段，表达式如下所示：\n![image-20230724104529491](Module.assets/image-20230724104529491.png)\n取消勾选“role”字段，表达式如下所示：\n![image-20230724104606402](Module.assets/image-20230724104606402.png)\n用户验证通过目标元素信息后，可将所生成的元素表达式复制到函数的“选取器”-“表达式编辑器”中，如下图所示\n![1713151055954](Module.assets/1713151055954.png)\n#### 场景示例\n示例：通过谷歌浏览器打开百度界面，在百度界面进行操作。\n1. 在组件编辑界面，添加【打开浏览器】函数，输入需要打开的网页地址（此处打开百度）；\n   ![image-20230801153704764](Module.assets/image-20230801153704764.png)\n   ![image-20230801154334974](Module.assets/image-20230801154334974.png)\n2. 添加【单击】函数，在组件编辑界面，单击【用户界面探测器】；\n   ![image-20230801154442057](Module.assets/image-20230801154442057.png)\n3. 在“用户界面探测器”界面，单击【指出元素】，鼠标指明需要指定的元素，则在界面的下方会生成元素的表达式；\n   ![image-20230801160321153](Module.assets/image-20230801160321153.png)\n4. 将界面下方的表达式，复制到【单击】函数的选取器属性的表达式编辑处；\n   ![image-20230801160526290](Module.assets/image-20230801160526290.png)\n   ![image-20230801160624957](Module.assets/image-20230801160624957.png)\n5. 可通过【验证】以及【高亮显示】，判断所选择的元素是否正确；\n   ![image-20230801160827449](Module.assets/image-20230801160827449.png)\n6. 待设置完成后，可关闭“用户界面探测器”，回到脚本编辑界面，进行脚本执行等其他操作。"
  },
  {
    "text": "##  组件开发\n### 组件参数\n类似程序设计的函数，组件支持数据的参数动态传递，有助于提高组件的重用性。例如网银登录组件，用户名、密码可作为参数由外部传入，实现用不同账户进行网银的登录。\n根据参数的传递方向，可分为输入、输出两种（input、output）。\n####  创建参数\n1. 从上下文菜单中选择创建。\n   在脚本函数的属性面板中，单击编辑框后右键，可从上下文菜单中选择“创建输入参数”/“创建输出参数”，然后在弹出框中输入参数名称。参数类型会根据属性框中所需要的类型自动定义。\n   ![1699842064389](Parameter.assets/1699842064389.png)\n   ![1699842143605](Parameter.assets/1699842143605.png)\n   ![1699842208694](Parameter.assets/1699842208694.png)\n2. 参数面板中创建\n   若组件编辑界面下方未显示参数面板，则可单击下图的“参数”，展开参数面板：\n   ![1699842332478](Parameter.assets/1699842332478.png)\n   在展开的参数面板中，单击 F2 可进入编辑状态，可新建参数，其中通过【定位】按钮，可定位到所调用该参数的函数。\n   ![1704766609246](Parameter.assets/1704766609246.png)\n   > **[info] 提示**\n   >\n   > - 选中参数名称按 F2 修改名称后，再单击其后方的“修改”按钮，可将修改后的参数名称同步到引用该参数的函数里。（2023.12.27（不包含）之后版本才支持该功能。）\n   > - 参数支持的类型可通过单击“参数类型”列后按 F2 进行下拉选择，此处建立的参数被组件引用时，需保证变量类型与属性类型一致。\n#### 使用参数\n参数的使用，可直接输入参数名称，或通过“显示智能提示”方式进行选择：\n1. 直接输入关键字名称（无需带引号）。\n   ![image-20220509153449244](Parameter.assets/image-20220509153449244.png)\n2. 单击编辑框后右键，通过“显示智能提示”方式进行选择。\n   ![1699843155730](Parameter.assets/1699843155730.png)\n   ![1699843242854](Parameter.assets/1699843242854.png)\n#### 传递参数\n参数传递有两种传递的方式：组件调用组件时的参数传递和流程调用组件时的参数传递。\n1. 组件调用组件时的参数传递。\n   ![1699843649553](Parameter.assets/1699843649553.png)\n2. 流程调用时的参数传递。\n   ![1699843845487](Parameter.assets/1699843845487.png)"
  },
  {
    "text": "### 开发第一组件\n**示例：通过谷歌浏览器打开百度网页，在百度网页进行操作。**\n1. 在组件编辑界面左边的“搜索内容”框中，输入“打开浏览器”，双击“打开浏览器”可将该函数添加到中间的编辑面板中；\n   ![image-20230802091459383](manual_addition.assets/image-20230802091459383.png)\n2. 添加【打开浏览器】函数，在函数的网址栏输入百度的网址，浏览器类型选择“Chrome”；\n   ![image-20230802091253108](manual_addition.assets/image-20230802091253108.png)\n3. 在搜索框中，输入“输入信息”，双击“输入信息”可将该函数添加到中间的编辑面板中；\n   ![image-20230802091652745](manual_addition.assets/image-20230802091652745.png)\n4. 在【输入信息】函数的“文本”属性栏中，填入想要输入的内容，且通过“指明在屏幕上”指明内容输入的位置（此处指明的位置为百度界面的所有框）；\n   ![image-20230802091907454](manual_addition.assets/image-20230802091907454.png)\n   ![image-20230802092001610](manual_addition.assets/image-20230802092001610.png)\n5. 在搜索框中输入“单击”，双击添加【单击】函数，且通过“指明在屏幕上”指明【百度一下】按钮；\n   ![image-20230802092159349](manual_addition.assets/image-20230802092159349.png)\n   ![image-20230802092226839](manual_addition.assets/image-20230802092226839.png)\n   ![image-20230802092241392](manual_addition.assets/image-20230802092241392.png)\n6. 在搜索栏搜索“获取属性”，添加【获取属性】函数，通过“指明在屏幕上”指明需要获取的元素，并在“属性”栏选择该元素的属性（该属性类型的选择，可通过在网页中按 F12 查看）；\n   ![image-20230802094116103](manual_addition.assets/image-20230802094116103.png)\n7. 在【获取属性】函数中创建输出变量 “text” ；\n   ![image-20230802094237890](manual_addition.assets/image-20230802094237890.png)\n   ![image-20230802094309088](manual_addition.assets/image-20230802094309088.png)\n8. 添加【日志消息】函数，将【获取属性】函数的输出变量 “text” 作为【日志消息】的输入变量；\n   ![image-20230802094445681](manual_addition.assets/image-20230802094445681.png)\n   ![image-20230802094513279](manual_addition.assets/image-20230802094513279.png)\n   ![image-20230802094530378](manual_addition.assets/image-20230802094530378.png)\n9. 脚本编辑完成后，执行脚本即可。"
  },
  {
    "text": "## 组件展示\n在【组件管理】- 脚本向导编辑页面，用户可通过可视化、源代码和中文格式三个子页面查看当前脚本向导代码信息，其中可视化界面为脚本向导的主要开发界面。\n### 可视化\n在【组件管理】页面增加“脚本向导”类型的组件，进入脚本向导编辑页面时，默认展示的是“可视化”子页面，在该页面可进行函数增加编辑等操作。\n“可视化”页面，如下图所示：\n![image-20230306140446574](Show.assets/image-20230306140446574.png)\n### 源代码\n“源代码”页面，可查看到脚本向导组件的源代码形式，可在脚本编辑页面，单击“源代码”进行切换。\n> **[warning] 注意**\n>\n> &emsp;“源代码”页面下的代码不支持复用到其他语言中，如将该页面代码复制到英文脚本编辑界面是无法正常执行的。\n“源代码”页面如下图所示：\n![image-20230306140652538](Show.assets/image-20230306140652538.png)\n### 中文格式\n“中文格式”页面，是将脚本向导组件中所增加的函数，以中文脚本的格式进行展示。\n> **[warning] 注意**\n>\n> &emsp;“中文格式”页面下的代码不支持直接复用到中文脚本中，仅可通过该页面查看到该脚本向导组件对应运用的中文函数情况。\n“中文格式”页面，如下图所示：\n![image-20230306140822358](Show.assets/image-20230306140822358.png)"
  },
  {
    "text": "### 选取器\n当某些软件程序的布局和属性节点具有易变的值时，机器人为了适应这些无法预测的变化，需要进行手动修改选取器，如某些Web的应用程序。\n#### 功能说明\n对于可指明元素的函数，都将会拥有“选取器”属性。当指明元素时，“选取器”属性的值会自动生成，但用户也可根据实际情况修改“选取器”的内容。选取器的功能及使用，如下【单击】函数示例：\n- 单击“选取器”属性栏右侧的图标；\n  ![image-20230717111025087](selector.assets/image-20230717111025087.png)\n- 会弹出一个下拉栏，可选择“指明在屏幕上”、“编辑选取器”、“表达式编辑器”；\n  ![image-20230717111820437](selector.assets/image-20230717111820437.png)\n  - 指明在屏幕上\n    此处的“指明在屏幕上”功能，和函数右侧的“指明在屏幕上”功能一样，都是单击后选中需要指明的元素即可。\n    ![image-20230717113513380](selector.assets/image-20230717113513380.png)\n    > **[info] 提示**\n    >\n    > - 当进入了指明元素状态时，可通过按“Esc”取消选择。\n    > - 当进入了指明元素状态时，可通过按“F2”延时选择。\n    > - 当进入了指明元素状态时，可通过按“F3”选择区域。\n    > - 当进入了指明元素状态时，可通过按“F4”切换用户界面框架。\n    当指明元素后，在函数右侧“指明在屏幕上”的区域进行单击，则会出现一个下拉栏，可选择的操作有：指明在屏幕上、编辑选取器、表达式编辑器、查看截图、删除截图。\n    ![image-20230721102842820](selector.assets/image-20230721102842820.png)\n  - 编辑选取器：在“选取器编辑器”界面，可以查看到所指明元素的属性、数据、变量以及元素的表达式，除此之外，还可对所指明的元素进行验证以及高亮显示出元素在界面中的位置。\n    现以指明“百度一下”按钮为例：\n    - 未指明元素时，“选取器编辑器”界面如下所示：\n      ![image-20230721103813084](selector.assets/image-20230721103813084.png)\n    - 指明元素时，“选取器编辑器”界面如下所示，可自定义编辑该界面的内容；\n      ![image-20230721103840328](selector.assets/image-20230721103840328.png)\n      单击【验证】按钮，当![1689907228585](selector.assets/1689907228585.jpg)变成![1689907290936](selector.assets/1689907290936.jpg)时，表明验证成功，元素存在；当![1689907228585](selector.assets/1689907228585.jpg)变成![1689907390058](selector.assets/1689907390058.jpg)时，表明验证失败，元素不存在。\n      ![image-20230721104418923](selector.assets/image-20230721104418923.png)\n      单击【指出元素】，可重新进行元素选择。\n      ![image-20230721104631858](selector.assets/image-20230721104631858.png)\n      单击【高亮显示】，则会用红色方框框出所指明的元素。\n      ![image-20230721104739506](selector.assets/image-20230721104739506.png)\n      ![image-20230721104801921](selector.assets/image-20230721104801921.png)\n  - 表达式编辑器：当指明元素后，在“表达式编辑器”页面，可查看到该元素的表达式，可在此处自定义进行修改。\n    ![image-20230721110220725](selector.assets/image-20230721110220725.png)\n#### 场景示例\n示例：通过谷歌浏览器打开百度界面，在百度界面进行操作。\n1. 在组件编辑界面，添加【打开浏览器】函数，输入需要打开的网页网址（此处打开百度）；\n   ![image-20230801144704626](selector.assets/image-20230801144704626.png)\n   ![image-20230801144803879](selector.assets/image-20230801144803879.png)\n2. 添加【单击】函数，单击【指明在屏幕上】，在百度界面上，选择需要单击的元素（此处选择的是单击“新闻”）；\n   ![image-20230801145314858](selector.assets/image-20230801145314858.png)\n   选取器表达式如下：\n   ![image-20230801145354920](selector.assets/image-20230801145354920.png)\n3. 若此时需要切换单击的元素，可直接在步骤2中的选取器表达式中进行修改。如需要单击百度界面中的“地图”元素，则需将“aaname”修改为地图即可如下：\n   具体修改的内容可根据网页元素而定，可通过在网页中按F12进行查看。\n   ![image-20230801145811347](selector.assets/image-20230801145811347.png)\n   ![image-20230801145658520](selector.assets/image-20230801145658520.png)\n4. 设置完毕后，可执行组件，执行的结果为：通过谷歌浏览器打开百度界面，且进入“地图”界面。"
  },
  {
    "text": "# 附录\n 更多脚本向导函数的帮助说明，请跳转到 [脚本向导帮助手册](http://doc.kingsware.cn:8096/public/Uploads/Doc/1F53877248097EE8E2DEBD4543A11C9A/index.html)  进行查看。"
  },
  {
    "text": "## POP3获取邮件消息\n![image-20220509165200284](POP3.assets/image-20220509165200284.png)\n![image-20230807094316108](POP3.assets/image-20230807094316108.png)\n1. 常用属性介绍\n   - 电子邮件: 用于接收消息的电子邮件帐户密码。\n   - 密码：用于接收消息的电子邮件帐户的密码。\n   - 服务器: 要使用的电子邮件服务器主机。\n   - 端口: 用于获取电子邮件消息的端口。\n   - 指定发件人：只收取此参数包含的发件人发送的邮件，多个使用英文分号间隔。\n   - 指定主题：只收取邮件主题包含指定主题的邮件，多个使用英文分号间隔。\n   - 开始时间：只收取此时间之后的邮件。\n   - 结束时间：只收取此时间之前的邮件。\n   - 代理参数：代理参数，格式为“地址L端口”。\n   - 删除信息：指定是否应将已读消息标记为删除。\n   - 连接方式：邮箱的连接方式。\n   - 安全连接：用于指定连接的SSL或TLS加密。\n   - 顶部: 从列表顶部开始检索的邮件数，默认为30。\n   - 消息：作为邮件消息对象的集l合，已检索到的邮件消息。\n2. 案例说明\n   使用“获取POP3邮件消息”函数，收取邮件消息，并遍历循环邮件，取出邮件的主题、发件人、收件人、日期、邮件内容等信息。\n3. 操作步骤\n   1. 使用“获取POP3邮件消息”函数，配置相关信息。\n      ![image-20220509173138169](POP3.assets/image-20220509173138169.png)\n   2. 配置完成，编译、保存、运行程序。\n      ![image-20220509173200777](POP3.assets/image-20220509173200777.png)\n   3. 查看运行结果。\n      ![image-20220509173232132](POP3.assets/image-20220509173232132.png)"
  },
  {
    "text": "## Outlook\n### 获取Outlook邮件信息\n![image-20230807094238981](Outlook.assets/image-20230807094238981.png)\n1. 常用属性介绍\n   - 输入:\n       邮件文件夹: 从中检索邮件的邮件文件夹。\n       账户对应的目录名称: 用于访问要检索邮件的帐户。\n   - 选项:\n     筛选器： 用作要检索邮件的过滤器的字符串。\n     仅未读消息：是否仅检索未读消息，默认此复选框处于选中状态。\n     标记为已读：是否将检索到的邮件标记为已读，默认清除此复选框。\n     顶部: 从列表顶部开始检索的邮件数，默认为30。\n   - 输出：\n     消息：作为邮件消息对象的集合，已检索到的邮件消息。\n2. 案例说明\n   使用“获取Outlook邮件信息”函数，收取邮件消息，并遍历循环邮件，取出邮件的主题、发件人、收件人、日期、邮件内容等信息。\n3. 操作步骤\n   1. 使用“获取Outlook邮件信息”函数，配置相关信息。\n      ![image-20220509173440264](Outlook.assets/image-20220509173440264.png)\n   2. 使用“应用程序集成 > 邮件 > 邮件属性 ”下面的函数来获取相应的邮件信息，将信息保存在变量并打印输出到控制台。\n      ![image-20220509173458714](Outlook.assets/image-20220509173458714.png)\n   3. 配置完成，编译、保存、运行程序。\n      ![image-20220509173518196](Outlook.assets/image-20220509173518196.png)\n   4. 查看运行结果。\n      ![image-20220509173533680](Outlook.assets/image-20220509173533680.png)\n### 发送Outlook邮件信息\n![image-20220509173546292](Outlook.assets/image-20220509173546292.png)\n![image-20220509173556600](Outlook.assets/image-20220509173556600.png)\n1. 常用属性介绍\n   - Mail：\n     附件：要添加到电子邮件中的附件。\n     附件集合：要添加到电子邮件中的附件列表，允许指定待附加的一组文件 。\n     收件人：主要的电子邮件收件人。\n     抄送：次要的电子邮件收件人。\n     密送：隐藏的电子邮件收件人。\n     主题：电子邮件的主题。\n     正文：电子邮件消息正文。\n   - 输入:\n     账户: 用于发送消息的帐户。\n     代表某人发送: 邮件信息预期发件人的显示名称。\n   - 选项:\n     是草稿：是否将邮件另存为草稿 。\n     正文是Html:指定消息主体是否以HTML格式编写。\n2. 案例说明\n   使用“发送Outlook邮件信息”函数，给指定邮箱发送邮件，抄送另外一位邮件接收人，并发送附件。\n3. 操作步骤\n   1. 使用“发送Outlook邮件信息”函数，配置相关信息。\n      ![image-20220509173804916](Outlook.assets/image-20220509173804916.png)\n      ![image-20220509173815746](Outlook.assets/image-20220509173815746.png)\n   2. 运行查看结果。\n      ![image-20220509173831159](Outlook.assets/image-20220509173831159.png)"
  },
  {
    "text": "## IMAP\n### 获取IMAP邮件信息\n![image-20220509173852525](IMAP.assets/image-20220509173852525.png)\n![image-20230807093747863](IMAP.assets/image-20230807093747863.png)\n1. 常用属性介绍\n   - 电子邮件: 用于接收消息的电子邮件帐户。\n   - 密码: 用于接收消息的电子邮件帐户的密码。\n   - 服务器: 要使用的电子邮件服务器主机。\n   - 端口: 用于获取电子邮件消息的端口。\n   - 指定发件人：只收取此参数包含的发件人发送的邮件，多个使用英分号隔开。\n   - 指定主题：只收取邮件主题包含指定主题的邮件，多个使用英文分号隔开。\n   - 开始时间：只收取此时间之后的邮件。\n   - 结束时间：只收取此时间之前的邮件。\n   - 邮件文件夹：从中检索邮件的邮件文件夹。\n   - 代理参数：代理参数，输入格式为“地址：端口”。\n   - 删除信息：指定是否应将已读消息标记为删除。\n   - 仅未读消息：是否仅检索未读消息，默认此复选框处于选中状态。\n   - 标记为已读：是否将检索到的邮件标记为已读，默认清除此复选框。\n   - 连接方式：邮箱的连接方式。\n   - 安全连接：用于指定连接的SSL或TLS加密。\n   - 顶部: 从列表顶部开始检索的邮件数，默认为30。\n   - 消息：作为邮件消息对象的集合，已检索到的邮件消息。\n2. 案例说明\n   使用“获取IMAP邮件信息”函数，收取邮件消息，并遍历循环邮件，取出邮件的主题、发件人、收件人、日期、邮件内容等信息。\n3. 操作步骤\n   1. 使用“获取IMAP邮件信息”函数，配置相关信息。\n      ![image-20220509174116672](IMAP.assets/image-20220509174116672.png)\n   2. 配置完成，编译、保存、运行程序。\n      ![image-20220509174136111](IMAP.assets/image-20220509174136111.png)\n   3. 运行查看结果。\n      ![image-20220509174205468](IMAP.assets/image-20220509174205468.png)\n### 移动IMAP邮件信息\n![image-20220509174312689](IMAP.assets/image-20220509174312689.png)\n![image-20220509174257574](IMAP.assets/image-20220509174257574.png)\n1. 常用属性介绍\n   - 登陆:\n     电子邮件: 用于移动消息的电子邮件帐户。\n     密码: 用于移动消息的电子邮件帐户的密码。\n   - Mail:\n     服务器: 要使用的电子邮件服务器主机。\n     端口: 用于获取电子邮件消息的端口。\n     启用SSL：是否使用SSL发送消息。\n   - 输入：\n     邮件消息：要移动的邮件消息对象。\n     从文件夹：可以在其中找到邮件的邮件文件夹。\n     邮件文件夹：要将邮件移动到的邮件文件夹。\n   - 选项:\n     安全连接：用于指定连接的SSL或TLS加密。\n2. 案例说明\n   使用“移动IMAP邮件信息”函数，在获取到邮件之后（参考10.4.1），将获取到的邮件从“收件箱”移动到“Test”文件夹。\n   ![image-20220509174503636](IMAP.assets/image-20220509174503636.png)"
  },
  {
    "text": "# 邮件自动化\n## 发送SMTP邮件消息\n![image-20230807092541966](Mail.assets/image-20230807092541966.png)\n1. 常用属性介绍\n   - 电子邮件: 用于发送消息的电子邮件帐户。\n   - 密码: 用于发送消息的电子邮件帐户的密码。\n   - 服务器: 要使用的电子邮件服务器主机。\n   - 端口: 用于发送电子邮件消息的端口。\n   - 名称: 发件人的显示名称。\n   - 从：发件人的电子邮件地址。\n   - 字符集：发送的邮件内容所使用的字符集，如“UTF-8”。\n   - 收件人：主要的电子邮件收件人。\n   - 抄送：次要的电子邮件收件人。\n   - 密送：隐藏的电子邮件收件人\n   - 主题：电子邮件的主题。\n   - 正文：电子邮件消息正文。\n   - 附件：要添加到电子邮件的附件，多个附件用分号隔开。\n   - 图片：发送的图片所在路径。\n   - 邮件消息：要转发的邮件消息，该字段仅支持邮件消息对象。\n   - 发送方式：邮件发送的方式。\n   - 安全连接：用于指定连接的SSL或TLS加密。\n   - 正文是Html：指定消息主体是否以HTML格式编写。\n2. 案例说明\n   利用“发送SMTP邮件消息”函数，给指定邮箱发送邮件，抄送另外一位邮件接收人，并发送附件。\n3. 操作步骤\n   1. 使用“发送SMTP邮件消息”函数，配置相关信息。\n      ![image-20220509165113952](Mail.assets/image-20220509165113952.png)\n      ![image-20220509165125534](Mail.assets/image-20220509165125534.png)\n   2. 运行查看结果。\n      ![image-20220509165145960](Mail.assets/image-20220509165145960.png)"
  },
  {
    "text": "## RPA建设价值\nRPA 机器人受到了愈来愈多的青睐，主要得益于 RPA 能够实现将**大量的、重复的、耗时的**事务转交给 “Robot” ，从而将员工从疲于应付的情况下解放出来，让员工发挥主观能动性，执行具有更高价值的事务。RPA 机器人与员工相比，能够更加的**快速、精确**，并且机器人不知疲倦，**全天候**执行相应事务。\n![image-20220509144409677](Value.assets/image-20220509144409677.png)\n![image-20220509144444473](Value.assets/image-20220509144444473.png)"
  },
  {
    "text": "## 金智维K-RPA\n金智维 RPA（以下简称“**K-RPA**”）系统 由 Server 、Control 、Robot（或称  Agent）三个程序部分组成，整体上采用了三层架构，除了提供 C/S 模式之外，还支持 B/S 模式。系统的核心引擎采用高效的 C++ 语言开发，注重对资源开销的低能耗。系统基于原子化、部件化的设计理念，确保技术架构的可复用性、灵活性。\n系统遵循绿色软件理念，无需安装过程，单个文件直接拷贝即可使用，部署方便，快捷简单，支持批量升级。K-RPA 产品架构如下图所示。![image-20220509144555507](KRPA.assets/image-20220509144555507.png)\n- Robot 应用程序（即机器人代理端），安装在执行操作的目标机器上，在在目标机器上执行指令进行自动化操作的程序，包括物理机或虚拟机安装代理端，可分时段执行不同的任务,负责具体的流程操作任务，是全天候的虚拟员工。\n- Server 应用程序（即 RPA 控制器），用来协调，联通和管理机器人以及 Control， 同时对所有的系统资源（包括流程、脚本、用户权限等信息）进行集中存储 管理。Server 端分别限制 Control 和 Robot 的同时接入总数量。\n- Control  应用程序（即机器人编辑设计端），用于用户与机器人交互的操作程序，可在此应用程序上进行场景脚本的开发、流程配置、流程管理、流程触发、机器人运行管理、系统配置等。Control 端只有连接到 Server 端的时候，才能进行能够进行流程定义、机器人控制等工作。"
  },
  {
    "text": "# 引言\n## 什么是RPA\nRPA (Robotic Process Automation, 机器人流程自动化)，这是一种能够通过模拟人类来执行重复性任务的软件。通过软件机器人自动处理大量重复性、具备规则性的工作流程任务。\n各行各业都可以通过使用 RPA 实现企业中所需要的自动化流程任务，例如：\n![image-20220509144255490](Instrostion.assets/image-20220509144255490.png)\n除上述机器人外，根据业务需求，能够定制开发出更多的机器人 ——RPA 将“机器人劳动力”带入传统的组织结构中，执行并提升业务工作流，为企业提高工作效率，加速实现价值，并降低人为错误。其代表着自动化技术发展的技术结晶，是工业革命4.0时代的必然产物。"
  },
  {
    "text": "## RPA适用场景\n![image-20220509144530387](Applicable.assets/image-20220509144530387.png)"
  },
  {
    "text": "## RPA与AI\n围绕 RPA 技术的未来发展，离不开目前最热门的人工智能（AI）技术，RPA 技术与 AI 技术二者是高度互补的，两者相当于人体的大脑和肌肉的关系，有别于 RPA 技术让机器人可以在“单一的、重复的、标准化的流程”上做出处理，AI 甚至可以理解组织内的决策，并应用统计分析来制定围绕这些决策的规则，应对更为复杂的商业环境，如果 说RPA就是机器人的神经网络，那么 AI 是机器人的大脑，通过 AI 给 RPA 技术赋能，可以极大提升 RPA 的能力。\n目前 RPA 结合一些基础的 AI 技术应用已经取得积极成效，包括结合 OCR 图像识别，人脸识别，证件识别，票据识别等技术，实现更多业务运营流程的提升。后续会结合更深层次的人工智能技术，包括大数据分析，深度机器学习 算法的利用，因为它可以从历史数据建立知识库，并将其用于行为决策和预测。通过与机器学习相结合，推动节约和提高效率的可能性是无止境的。"
  }
]